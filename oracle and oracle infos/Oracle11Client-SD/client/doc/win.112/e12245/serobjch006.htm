<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta http-equiv="Content-Language" content="en" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<meta name="robots" content="all" scheme="http://www.robotstxt.org/" />
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.1 Build 026" />
<meta name="Date" content="2010-01-21T17:54:48Z" />
<meta name="doctitle" content="Oracle&reg; Objects for OLE Developer's Guide 11g Release 2 (11.2) for Microsoft Windows" />
<meta name="partno" content="E12245-01" />
<meta name="docid" content="OOFOL" />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />
<link rel="Stylesheet" href="../../dcommon/css/blafdoc.css" title="Default" type="text/css" />
<script type="text/javascript" src="../../dcommon/js/doccd.js">
</script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="serobjch005.htm" title="Previous" type="text/html" />
<link rel="Next" href="serobjch007.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e12245.pdf" title="PDF version" type="application/pdf" />
<title>OraBLOB, OraCLOB Objects</title>
</head>
<body>
<div class="header">
<div class="zz-skip-header"><a name="top" id="top" href="#BEGIN">Skip Headers</a></div>
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top"><b>Oracle&reg; Objects for OLE Developer's Guide<br />
11<i>g</i> Release 2 (11.2) for Microsoft Windows</b><br />
Part Number E12245-01</td>
<td valign="bottom" align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="serobjch005.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="serobjch007.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td align="right" valign="top" style="font-size: 90%"><a href="../e12245.pdf">View PDF</a></td>
</tr>
</table>
<a name="BEGIN" id="BEGIN"></a></div>
<div class="IND"><!-- End Header --><a id="BABHEIGC" name="BABHEIGC"></a><a id="OOFOL355" name="OOFOL355"></a>
<hr />
<div class="refsect1">
<h1 class="refsect1">OraBLOB, OraCLOB Objects</h1>
<a id="sthref589" name="sthref589"></a>
<p class="titleinrefsubsect">Description</p>
<p>The <code>OraBLOB</code> and <code>OraCLOB</code> interfaces in OO4O provide methods for performing operations in a database on the large object data types <code>BLOB</code>, <code>CLOB</code>, and <code>NCLOB</code>. In this developer's guide, <code>BLOB</code>, <code>CLOB</code>, and <code>NCLOB</code> data types are also referred to as LOB data types.</p>
<p>OO4O supports the creation of temporary <code>BLOB</code> or <code>CLOB</code> types that can be manipulated and then bound to SQL statements or PL/SQL blocks, or copied into permanent LOBs.</p>
<a id="sthref590" name="sthref590"></a>
<p class="titleinrefsubsect">Remarks</p>
<p>LOB data is accessed using the <code>Read</code> and <code>CopyToFile</code> methods.</p>
<p>LOB data is modified using the <code>Write</code>, <code>Append</code>, <code>Erase</code>, <code>Trim</code>, <code>Copy</code>, <code>CopyFromFile</code>, and <code>CopyFromBFile</code> methods. A row lock must be obtained before modifying the contents of a LOB column in a row. If the LOB column is a field of an <code>OraDynaset</code> object, then the lock is obtained by invoking the <code>Edit</code> method.</p>
<p>None of the LOB operations are allowed on <code>NULL</code> LOBs. To avoid errors, use the <code>IsNull</code> property to detect <code>NULL</code> LOBs. To perform write operations on a LOB that is null, first the LOB column must be initialized with an Empty value.</p>
<p>To insert a new row having a LOB column, first initialize the LOB column with an Empty value by setting the <code>Value</code> property of the <code>OraField</code> or <code>OraParameter</code> object to the keyword Empty and commit the change to the database. The newly updated Empty LOB must be selected again from the database before it can be used. This is done automatically in the case of the <code>OraDynaset</code> object: If a LOB field in an <code>OraDynaset</code> object is set to Empty and the <code>Update</code> method is called, OO4O automatically reselects the Empty LOB into the dynaset making it available for use in subsequent write operations.</p>
<p>There are two modes of operation for read and write operations for LOBs.</p>
<ol>
<li>
<p>Multiple-piece read/write operations</p>
<p>In this mode, the total amount of data to be read or written is more than the size of the buffer for an individual read/write operation. Rather than make a complete round-trip for each operation, the pieces are streamed. To begin the multiple piece operation, the <code>PollingAmount</code> property is first set to the total amount of data to be read or written. The <code>Offset</code> property is set at this time to specify the initial offset for the first piece read/write operation. The offset is automatically incremented after the first read/write operation, and cannot be changed again until the multiple piece operation has completed. The <code>Status</code> property must be checked for the success of each piecewise operation and the operation must continue until all the pieces are read or written (it cannot be aborted). To start another multiple-piece read/write operation on the same LOB, the <code>PollingAmount</code> property has to be reset to the desired amount. See <a href="sermthod146.htm#BHBIECAI">"Example: Multiple-Piece Read of a LOB"</a>.</p>
</li>
<li>
<p>Single-piece read/write operation</p>
<p>In this mode, the reading and writing of data occurs in one operation. This mode is enabled when the <code>PollingAmount</code> property is set to <code>0</code>. See <a href="sermthod146.htm#BHBCAFBH">"Example: Single-Piece Read of a LOB"</a>.</p>
<p>The <code>Offset</code> property in both modes of operation is 1-based.</p>
</li>
</ol>
<p>By design, LOBs cannot span transactions started by <code>SELECT</code> <code>..</code> <code>FOR</code> <code>UPDATE</code>, <code>INSERT</code>, and <code>UPDATE</code> statements. Selecting or modifying LOB values using these SQL statements makes LOBs invalid outside the current transaction. In Oracle Objects for OLE, transactions can be started and ended in the following ways.</p>
<ol>
<li>
<p><code>Dynaset</code> <code>Edit</code>/<code>Update</code> method</p>
<p>The <code>Edit</code> method executes the <code>SELECT</code> <code>FOR</code> <code>UPDATE</code> statement to lock the row and start the transaction. The <code>Update</code> method ends the transaction. If the LOB column value is modifed between the <code>Edit</code> and <code>Update</code> pair, OO4O reselects the value of LOB column after the <code>Update</code> call. This is transparent to the user. Note that OO4O does not reselect the LOB value if the LOB is an attribute of an Oracle objects instance or element of an Oracle collection. If the transaction is started by the <code>OraSession</code>/<code>OraDatabase</code> or <code>OraServer</code> object and the LOB data is modified between the <code>Edit</code> and <code>Update</code> methods, OO4O does not reselect the LOB value from the database. LOBs are invalid after committing transactions initiated by <code>OraSession</code>/<code>OraDatabase</code> or <code>OraServer</code> objects.</p>
<p>See <a href="#CBHJAIJJ">"Example: Dynasets Containing LOBs and Transactions"</a>.</p>
</li>
<li>
<p>Executing an <code>INSERT</code> or <code>UPDATE</code> statement through the <code>ExecuteSQL</code> or <code>CreateSQL</code> method.</p>
<p>An <code>INSERT</code> or <code>UPDATE</code> statement starts the transaction, and the transaction is implicitly ended by Oracle Objects for OLE (auto-commit). If a statement has a LOB output bind parameter, as in the case of the <code>RETURNING</code> <code>..</code> <code>INTO</code> clause, then it will become invalid after the <code>ExecuteSQL</code> or <code>CreateSQL</code> method is executed To avoid this, the user must execute these statement between the <code>BeginTrans</code>/<code>CommitTrans</code> pair of <code>OraSession</code>, <code>OraServer</code> or <code>OraDatabase</code> objects.</p>
<p>See <a href="#CBHIAJJD">"Example: INSERT or UPDATE Statements with LOBs and Transactions"</a>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="advfeat.htm#BGBCIACB">"Using Large Objects (LOBs)"</a> for more information about LOB operations and LOB performance issues</p>
</li>
<li>
<p><a class="olink ADLOB" href="http://www.oracle.com/pls/db102/lookup?id=ADLOB"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a> for a detailed description of Oracle LOBs</p>
</li>
</ul>
</div>
<a id="sthref591" name="sthref591"></a>
<p class="titleinrefsubsect">Properties</p>
<ul>
<li>
<p><a href="serprop066.htm#CEGCAGEI">IsNull (OraLOB/BFILE) Property</a></p>
</li>
<li>
<p><a href="serprop104.htm#CHDFIBDJ">PollingAmount Property</a></p>
</li>
<li>
<p><a href="serprop093.htm#CEGFGAAJ">Offset (OraLOB/BFILE) Property</a></p>
</li>
<li>
<p><a href="serprop120.htm#CEGCIFAB">Size (OraLOB and OraBFILE) Property</a></p>
</li>
<li>
<p><a href="serprop125.htm#CEGCGCEC">Status (OraLOB/BFILE) Property</a></p>
</li>
</ul>
<a id="sthref592" name="sthref592"></a>
<p class="titleinrefsubsect">Methods</p>
<ul>
<li>
<p><a href="sermthod012.htm#CIHDFAFB">Append (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod031.htm#CIHFBJFI">Clone (OraLOB/BFILE) Method</a></p>
</li>
<li>
<p><a href="sermthod043.htm#CIHDJJHA">Compare (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod046.htm#CIHICFAF">Copy (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod047.htm#CIHJGCJC">CopyFromFile (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod048.htm#CIHEJAHG">CopyFromBFILE (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod049.htm#CIHHBCHF">CopyToFile (OraLOB/BFILE) Method</a></p>
</li>
<li>
<p><a href="sermthod075.htm#CIHDAJJA">DisableBuffering (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod083.htm#BHBCBEGA">EnableBuffering (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod085.htm#CIHDDDEI">Erase (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod093.htm#CIHGIJDF">FlushBuffer (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod126.htm#CIHEHFAG">MatchPos (OraLOB/BFILE) Method</a></p>
</li>
<li>
<p><a href="sermthod146.htm#CIHDFFEH">Read (OraLOB/BFILE) Method</a></p>
</li>
<li>
<p><a href="sermthod171.htm#CIHGCFGB">Trim (OraLOB) Method</a></p>
</li>
<li>
<p><a href="sermthod176.htm#CIHIGAJA">Write (OraLOB) Method</a></p>
</li>
</ul>
<a id="sthref593" name="sthref593"></a>
<p class="titleinrefsubsect">Examples</p>
<p>See <a href="appendix.htm#BABJGBAG">"Schema Objects Used in LOB Data Type Examples"</a> for schema objects that are used in the OraLOB and <code>BFILE</code> examples.</p>
<a id="OOFOL356" name="OOFOL356"></a><a id="sthref594" name="sthref594"></a>
<p class="subhead2">Example: Accessing a LOB Value</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession As OraSession 
Dim OraDatabase As OraDatabase 
Dim OraDynaset As OraDynaset 
Dim PartImage as OraBlob 
Dim buffer As Variant 
 
'Create the OraSession Object. 
Set OraSession = CreateObject("OracleInProcServer.XOraSession") 
 
'Create the OraDatabase Object by opening a connection to Oracle. 
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", _
                           "scott/tiger", 0&amp;) 
 
'execute the select statement 
set OraDynaset = OraDatabase.CreateDynaset ("select * from part",0&amp;) 
 
'retrieve photo field from the dynaset 
set PartImage = OraDynaset.Fields("part_image").Value 
 
'read the entire LOB column in one piece into the buffer 
amount_read = PartImage.Read(buffer, 10) 
'use the buffer for internal processing 
</pre>
<a id="OOFOL357" name="OOFOL357"></a><a id="sthref595" name="sthref595"></a>
<p class="subhead2">Example: Modifying a LOB Value</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession As OraSession 
Dim OraDatabase As OraDatabase 
Dim OraDynaset As OraDynaset 
Dim  PartDesc as OraClob 
Dim buffer As String 
 
'Create the OraSession Object. 
Set OraSession = CreateObject("OracleInProcServer.XOraSession") 
 
'Create the OraDatabase Object by opening a connection to Oracle. 
Set OraDatabase = OraSession.OpenDatabase("ExampleDb","scott/tiger", 0&amp;) 
 
'execute the select statement 
set OraDynaset = OraDatabase.CreateDynaset ("select * from part",0&amp;) 
set PartDesc = OraDynaset.Fields("part_desc").Value 
 
'To get a free file number 
FNum = FreeFile 
'Open the file for reading 
Open "partdesc.dat" For Binary As #FNum 
 
'Allocate buffer to the size of file FNum and read the entire file 
buffer = String$(LOF(FNum), 32) 
Get #FNum, , buffer 
 
'lock the row for write operation 
OraDynaset.Edit 
amount_written = PartDesc.Write(buffer) 
 
'commit the operation and release the lock 
OraDynaset.Update 
Close FNum 
</pre>
<a id="OOFOL358" name="OOFOL358"></a><a id="sthref596" name="sthref596"></a>
<p class="subhead2">Example: Inserting LOBs Using Dynasets</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession As OraSession 
Dim OraDatabase As OraDatabase 
Dim Part As OraDynaset 
Dim PartImage as OraBLOB 
Dim ImageChunk() As Byte 
Dim amount_written As Long 
 
'Create the OraSession Object. 
Set OraSession = CreateObject("OracleInProcServer.XOraSession") 
 
'Create the OraDatabase Object by opening a connection to Oracle. 
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'Create a Dynaset containing a BLOB and a CLOB column 
 
set part = OraDatabase.CreateDynaset ("select * from part",0) 
set PartImage = part.Fields("part_image").Value 
 
'First insert Empty LOB in the part_image column 
part.AddNew 
    part.Fields("part_id").Value = 1234 
    part.Fields("part_image").Value = Empty 
part.Update 
 
'move to the newly added row 
Part.MoveLast 
 
'To get a free file number 
FNum = FreeFile 
 
'Open the file for reading PartImages 
Open "part_picture.gif" For Binary As #FNum 
 
'Re adjust the buffer size to hold entire file data 
 
Redim ImageChunk(LOF(FNum)) 
 
'read the entire file and put it into buffer 
Get #FNum, , ImageChunk 
 
'call dynaset's Edit method to lock the row 
part.Edit 
amount_written = OraBlob.Write(ImageChunk) 
part.Update 
 
'close the file
Close FNum 
</pre>
<a id="OOFOL359" name="OOFOL359"></a><a id="sthref597" name="sthref597"></a>
<p class="subhead2">Example: Inserting LOBs Using an OraParameter Object</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession As OraSession 
Dim OraDatabase As OraDatabase 
Dim OraBlob As OraBlob 
Dim ImageChunk() As Byte 
Dim amount_written As Long 
 
'Create the OraSession Object. 
Set OraSession = CreateObject("OracleInProcServer.XOraSession") 
 
'Create the OraDatabase Object by opening a connection to Oracle. 
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
Set OraParameters = OraDatabase.Parameters 
OraParameters.Add "PartImage", Empty,ORAPARM_OUTPUT 
OraParameters("PartImage").ServerType = ORATYPE_BLOB 
 
'BeginTrans needs to be called since LOB locators become 
'invalid after the ExecuteSQL call 
OraSession.BeginTrans 
OraDatabase.ExecuteSQL ("insert into part values (1234,'Oracle  Application'," &amp; _
                "EMPTY_BLOB(),NULL,NULL) RETURNING part_image INTO :PartImage") 
set PartImage = OraDatabase.Parameters("PARTIMAGE").Value 
 
FNum = FreeFile 
'Open the file for reading PartImages 
Open "part_picture.gif" For Binary As #FNum 
 
'read the file and put it into buffer 
Redim ImageChunk(LOF(FNum)) 
Get #FNum, , ImageChunk 
 
Set OraBlob = OraDatabase.Parameters("PartImage").Value 
amount_written = OraBlob.Write(ImageChunk, 10, ORALOB_ONE_PIECE) 
 
' commit the transaction and close the file
OraSession.CommitTrans 
Close FNum 
</pre>
<a id="CBHJAIJJ" name="CBHJAIJJ"></a><a id="OOFOL360" name="OOFOL360"></a>
<p class="subhead2">Example: Dynasets Containing LOBs and Transactions</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession As OraSession 
Dim OraDatabase As OraDatabase 
Dim OraBlob As OraBlob 
Dim PartImage as OraBLOB 
Dim ImageChunk() As Byte 
Dim amount_written As Long 
 
'Create the OraSession Object. 
Set OraSession = CreateObject("OracleInProcServer.XOraSession") 
 
'Create the OraDatabase Object by opening a connection to Oracle. 
Set OraDatabase = OraSession.OpenDatabase("ExampleDb",  "scott/tiger", 0&amp;) 
                                     
'Create a Dynaset containing a BLOB and a CLOB column 
set part = OraDatabase.CreateDynaset ("select * from part " &amp; _
                              "where part_id = 1234",0) 
set PartImage = part.Fields("part_image").Value 
 
'To get a free file number 
FNum = FreeFile 
 
'Open the file for reading PartImages 
Open "c:\part_picture.gif" For Binary As #FNum 
Redim ImageChunk(LOF(FNum)) 
 
'read the file and put it into buffer 
Get #FNum, , ImageChunk 
 
'starts the transaction on OraSession 
OraSession.BeginTrans 
 
'call dynaset's Edit method to lock the row 
part.Edit 
Set OraBlob = PartImage 
amount_written = OraBlob.Write(ImageChunk, 10, ORALOB_ONE_PIECE) 
part.Update 
 
'ends the transaction 
OraSession.CommitTrans 
 
'the following lines of code will raise error  
'LOB locator cannot span transaction' 
msgbox Partimage.Size 
Close FNum 
</pre>
<a id="CBHIAJJD" name="CBHIAJJD"></a><a id="OOFOL361" name="OOFOL361"></a>
<p class="subhead2">Example: INSERT or UPDATE Statements with LOBs and Transactions</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession As OraSession 
Dim OraDatabase As OraDatabase 
Dim ImageChunk() As Byte 
Dim amount_written As Long 
 
'Create the OraSession Object. 
Set OraSession = CreateObject("OracleInProcServer.XOraSession") 
 
'Create the OraDatabase Object by opening a connection to Oracle. 
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
Set OraParameters = OraDatabase.Parameters 
OraParameters.Add "PartImage", Empty,ORAPARM_OUTPUT 
OraParameters("PartImage").ServerType = ORATYPE_BLOB 
 
'Create a Dynaset containing a LOB,column 
OraDatabase.ExecuteSQL ("insert into part values (1234,'Oracle Application'," &amp; _ 
                  "EMPTY_BLOB(),NULL,NULL) RETURNING part_image INTO :PartImage") 
set PartImage = OraDatabase.Parameters("PARTIMAGE").Value 
 
'the following lines of code will raise error 
'LOB locator cannot span transaction' 
msgbox Partimage.Size 
</pre>
<a id="OOFOL362" name="OOFOL362"></a>
<p class="subhead2">Example: Using the CopyToFile Method</p>
<p>See <a href="sermthod049.htm#BHBBFEJJ">"Example:Using the CopyToFile Method"</a>.</p>
<a id="OOFOL363" name="OOFOL363"></a>
<p class="subhead2">Example: Using the CopyFromFile Method</p>
<p>See <a href="sermthod047.htm#BHBBICFI">"Example: Using the CopyFromFile Method"</a>.</p>
<a id="OOFOL364" name="OOFOL364"></a>
<p class="subhead2">Example: Multiple-Piece Read of a LOB</p>
<p>See <a href="sermthod146.htm#BHBIECAI">"Example: Multiple-Piece Read of a LOB"</a>.</p>
<a id="OOFOL365" name="OOFOL365"></a>
<p class="subhead2">Example: Single-Piece Read of a LOB</p>
<p>See <a href="sermthod146.htm#BHBCAFBH">"Example: Single-Piece Read of a LOB"</a>.</p>
<a id="OOFOL366" name="OOFOL366"></a>
<p class="subhead2">Example: Multiple-Piece Write of a LOB</p>
<p>See <a href="sermthod176.htm#BHBHDHGA">"Multiple-Piece Write of a LOB Example"</a>.</p>
<a id="OOFOL367" name="OOFOL367"></a>
<p class="subhead2">Example: Single-Piece Write of a LOB</p>
<p>See <a href="sermthod176.htm#BHBEDHIH">"Single-Piece Write of a LOB Example"</a>.</p>
<a id="OOFOL368" name="OOFOL368"></a>
<p class="subhead2">Example: Passing a Temporary CLOB to a Stored Procedure</p>
<p>See <a href="sermthod067.htm#BHBEACCG">"Example: Passing a Temporary CLOB to a Stored Procedure"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="serobjch005.htm#BABEIJFF">OraBFILE Object</a></p>
</li>
<li>
<p><a href="sermthod067.htm#CIHFDHFA">CreateTempBLOB/CLOB Method</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<div class="footer">
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<col width="33%" />
<col width="*" />
<col width="33%" />
<tr>
<td align="left">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="serobjch005.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="serobjch007.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td style="font-size: 90%" align="center" class="copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
