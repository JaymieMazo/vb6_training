<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta http-equiv="Content-Language" content="en" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<meta name="robots" content="all" scheme="http://www.robotstxt.org/" />
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.1 Build 026" />
<meta name="Date" content="2010-01-21T17:54:49Z" />
<meta name="doctitle" content="Oracle&reg; Objects for OLE Developer's Guide 11g Release 2 (11.2) for Microsoft Windows" />
<meta name="partno" content="E12245-01" />
<meta name="docid" content="OOFOL" />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />
<link rel="Stylesheet" href="../../dcommon/css/blafdoc.css" title="Default" type="text/css" />
<script type="text/javascript" src="../../dcommon/js/doccd.js">
</script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="serobjch007.htm" title="Previous" type="text/html" />
<link rel="Next" href="serobjch009.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e12245.pdf" title="PDF version" type="application/pdf" />
<title>OraCollection Object</title>
</head>
<body>
<div class="header">
<div class="zz-skip-header"><a name="top" id="top" href="#BEGIN">Skip Headers</a></div>
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top"><b>Oracle&reg; Objects for OLE Developer's Guide<br />
11<i>g</i> Release 2 (11.2) for Microsoft Windows</b><br />
Part Number E12245-01</td>
<td valign="bottom" align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="serobjch007.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="serobjch009.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td align="right" valign="top" style="font-size: 90%"><a href="../e12245.pdf">View PDF</a></td>
</tr>
</table>
<a name="BEGIN" id="BEGIN"></a></div>
<div class="IND"><!-- End Header --><a id="BABGFAAA" name="BABGFAAA"></a><a id="OOFOL370" name="OOFOL370"></a>
<hr />
<div class="refsect1">
<h1 class="refsect1">OraCollection Object</h1>
<a id="sthref602" name="sthref602"></a>
<p class="titleinrefsubsect">Description</p>
<p>The <code>OraCollection</code> interface represents Oracle collection types, such as variable-length arrays (<code>VARRAY</code>s) and nested tables.</p>
<a id="sthref603" name="sthref603"></a>
<p class="titleinrefsubsect">Remarks</p>
<p>A collection is an ordered group of elements, all of the same type. For example, the students in a class or the grades for each student in a class. Each element has a unique subscript, called an index, that determines its position in the collection.</p>
<p>The collection type nested table is viewed as a table stored in the column of database tables. When retrieved, rows of a nested table are given consecutive subscripts that start at <code>1</code>. Individual rows are accessed using an array-like access.</p>
<p>The collection type <code>VARRAY</code> is viewed as an array stored in the column of database tables. To reference an element in a <code>VARRAY</code> data type, standard subscripting syntax can be used. For example, <code>Grade(3)</code> references the third element in the <code>VARRAY</code> data type named <code>Grades</code>.</p>
<p>The <code>OraCollection</code> provides methods for accessing and manipulating an Oracle collection. Implicitly an <code>OraCollection</code> object contains an OLE Automation collection interface for accessing and manipulating (updating and inserting) individual elements of an Oracle collection. Individual elements can be accessed by using a subscript. An <code>OraCollection</code> element index starts at 1.</p>
<p>Element values are retrieved as <code>Variant</code> types. The <code>Variant</code> type of the element depends on the element type of the collection. Element values can be <code>Null</code> and can be set to <code>Null</code>. For elements of type objects and <code>REF</code>s, element values are returned as corresponding OO4O objects for that type. <code>VARRAY</code>s and nested tables do not support the elements of LOBs, <code>VARRAY</code>s, and Nested tables.</p>
<p><a href="#CBHHGCIB">Table 9-1</a> lists the element type and return value of the elements.</p>
<div class="tblformal"><a id="OOFOL371" name="OOFOL371"></a><a id="sthref604" name="sthref604"></a><a id="CBHHGCIB" name="CBHHGCIB"></a>
<p class="titleintable">Table 9-1 Element Type and Return Value of Elements</p>
<table class="Formal" title="Element Type and Return Value of Elements" summary="rows are element type-element value pairs. column 1 is the element type and column 2 is the element value" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="31%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t11">Element Type</th>
<th align="left" valign="bottom" id="r1c2-t11">Element Value</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t11" headers="r1c1-t11">
<p><code>Object</code></p>
</td>
<td align="left" headers="r2c1-t11 r1c2-t11">
<p><code>OraObject</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t11" headers="r1c1-t11">
<p><code>REF</code></p>
</td>
<td align="left" headers="r3c1-t11 r1c2-t11">
<p><code>OraRef</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t11" headers="r1c1-t11">
<p><code>Date</code></p>
</td>
<td align="left" headers="r4c1-t11 r1c2-t11">
<p><code>String</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t11" headers="r1c1-t11">
<p><code>Number</code></p>
</td>
<td align="left" headers="r5c1-t11 r1c2-t11">
<p><code>String</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t11" headers="r1c1-t11">
<p><code>CHAR</code>, <code>VARCHAR2</code></p>
</td>
<td align="left" headers="r6c1-t11 r1c2-t11">
<p><code>String</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t11" headers="r1c1-t11">
<p><code>Real</code></p>
</td>
<td align="left" headers="r7c1-t11 r1c2-t11">
<p><code>Real</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t11" headers="r1c1-t11">
<p><code>Integer</code></p>
</td>
<td align="left" headers="r8c1-t11 r1c2-t11">
<p><code>Integer</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Element values are converted into a <code>Variant</code> <code>SAFEARRAY</code> format using the <code>SafeArray</code> property. Only elements of primitive types are supported. A <code>Variant</code> <code>SAFEARRAY</code> index starts at <code>0</code>.</p>
<p>The <code>CreateOraObject</code> method on the <code>OraDatabase</code> object returns the <code>OraCollection</code> object. The Oracle collection associated with this <code>OraCollection</code> object is created in the client-side object cache.</p>
<p>For information about creating a dynaset from a collection, see to <a href="advfeat.htm#BABEBHDD">"Creating a Dynaset from an OraCollection Object"</a>.</p>
<a id="sthref605" name="sthref605"></a>
<p class="titleinrefsubsect">Properties</p>
<ul>
<li>
<p><a href="serprop004.htm#CEGGCIHB">BOC Property</a></p>
</li>
<li>
<p><a href="serprop041.htm#CEGBFJHG">ElementType Property</a></p>
</li>
<li>
<p><a href="serprop042.htm#CEGFCEJF">EOC Property</a></p>
</li>
<li>
<p><a href="serprop063.htm#CEGDDCCE">IsLocator (OraCollection) Property</a></p>
</li>
<li>
<p><a href="serprop065.htm#CEGHHJIF">IsNull (OraCollection) Property</a></p>
</li>
<li>
<p><a href="serprop075.htm#CEGBEJCI">MaxSize (OraCollection) Property</a></p>
</li>
<li>
<p><a href="serprop110.htm#CEGCGCIF">SafeArray (OraCollection) Property</a></p>
</li>
<li>
<p><a href="serprop119.htm#CEGCHCAJ">Size (OraCollection) Property</a></p>
</li>
<li>
<p><a href="serprop128.htm#CEGHBFHG">TableSize (OraCollection) Property</a></p>
</li>
<li>
<p><a href="serprop136.htm#CEGCDJAC">Type (OraCollection) Property</a></p>
</li>
</ul>
<a id="sthref606" name="sthref606"></a>
<p class="titleinrefsubsect">Methods</p>
<ul>
<li>
<p><a href="sermthod011.htm#BHBIIABE">Append (OraCollection) Method</a></p>
</li>
<li>
<p><a href="sermthod032.htm#BHBIEBJA">Clone (OraCollection) Method</a></p>
</li>
<li>
<p><a href="sermthod055.htm#CIHFEGFI">CreateIterator Method</a></p>
</li>
<li>
<p><a href="sermthod069.htm#BHBJJEDE">Delete (OraCollection) Method</a></p>
</li>
<li>
<p><a href="sermthod071.htm#CIHGBHAC">DeleteIterator Method</a></p>
</li>
<li>
<p><a href="sermthod082.htm#BHBIAHJE">ElementValue Method</a></p>
</li>
<li>
<p><a href="sermthod087.htm#BHBDDGBJ">Exist (OraCollection) Method</a></p>
</li>
<li>
<p><a href="sermthod105.htm#BHBEIGDA">InitIterator Method</a></p>
</li>
<li>
<p><a href="sermthod121.htm#CIHIHHFF">IterNext Method</a></p>
</li>
<li>
<p><a href="sermthod122.htm#CIHCGDEJ">IterPrev Method</a></p>
</li>
<li>
<p><a href="sermthod170.htm#BHBHEEDB">Trim (OraCollection) Method</a></p>
</li>
</ul>
<a id="sthref607" name="sthref607"></a>
<p class="titleinrefsubsect">Examples</p>
<p>Before running the sample code, make sure that you have the necessary data types and tables in the database. See <a href="appendix.htm#CHDCBCCE">"Schema Objects Used in OraCollection Examples"</a> for schema objects that are used in the <code>OraCollection</code> examples.</p>
<a id="OOFOL372" name="OOFOL372"></a><a id="sthref608" name="sthref608"></a>
<p class="subhead2">Example: Accessing Collection Elements</p>
<p>The following example illustrates how to access collection elements.</p>
<p><span class="bold">OraDynaset Example</span></p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim OraDynaset as OraDynaset
Dim EnameList as OraCollection
 
'create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb","scott/tiger", 0&amp;) 
 
'create a dynaset object from department
set OraDynaset = OraDatabase.CreateDynaset("select * from department", 0&amp;)
 
'retrieve a Enames column from Department. 
'Here Value property of OraField object returns EnameList OraCollection
set EnameList = OraDynaset.Fields("Enames").Value
 
'access the first element of EnameList
msgbox  EnameList(1)
 
'move to next to row
OraDynaset.MoveNext
 
'access all the elements of EnameList for the second row
For index = 1 To EnameList.Size
        msgbox EnameList(index)
Next Index    
</pre>
<p><span class="bold">OraParameter Example</span></p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim EnameList as OraCollection
 
'Create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'Create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'create an  OraParameter object representing EnameList collection bind Variable
OraDatabase.Parameters.Add "ENAMES", Null, ORAPARM_OUTPUT, _
                 ORATYPE_VARRAY,"ENAMELIST"
 
'execute the sql statement which selects ENAMES VARRAY  from the department  table
 
OraDatabase.ExecuteSQL ("BEGIN select enames  into :ENAMES  from department " &amp; _
                   "where  dept_id = 10;  END;")
 
'get the EnameList collection  from OraParameter
set EnameList = OraDatabase.Parameters("ENAMES").Value
 
'access all the elements of EnameList 
For index = 1 To EnameList.Size
        msgbox EnameList(index)
Next Index    
</pre>
<a id="OOFOL373" name="OOFOL373"></a><a id="sthref609" name="sthref609"></a>
<p class="subhead2">Example: Modifying Collection Elements</p>
<p>The following example illustrates how to modify collection elements.</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim OraDynaset as OraDynaset
Dim EnameList as OraCollection
 
'create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'create a dynaset object from department
set OraDynaset = OraDatabase.CreateDynaset("select * from department", 0&amp;)
 
'retrieve a Enames column from Department. Here Value property of OraField object
'returns EnameList OraCollection
 
set EnameList = OraDynaset.Fields("Enames").Value
 
'lock the row for editing and set the 2nd element of the EnameList to new value
OraDynaset.Edit
EnameList(2) = "Eric"
OraDynaset.Update
</pre>
<a id="OOFOL374" name="OOFOL374"></a><a id="sthref610" name="sthref610"></a>
<p class="subhead2">Example: Inserting in a Collection</p>
<p>The following example illustrates how to insert elements into an Oracle collection.</p>
<p><span class="bold">OraDynaset Example</span></p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim OraDynaset as OraDynaset
Dim EnameListNew as OraCollection
 
'create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'create a new OraCollection object from the database
set EnameListNew = OraDatabase.CreateOraObject("ENAMELIST")
 
'set EnameListNew's element values
EnameListNew(1)  = "Nasser"
EnameListNew(2) =  "Chris"
EnameListNew(3) =  "Gopal"
 
'create a dynaset object from department
set OraDynaset = OraDatabase.CreateDynaset("select * from department", 0&amp;)
 
'start the AddNew operation and insert the EnameListNew collection 
OraDynaset.AddNew
OraDynaset.Fields("dept_id") = 40
OraDynaset.Fields("name") = "DEVELOPMENT"
 
'set the EnameListNew to enames column
OraDynaset.Fields("enames") = EnameListNew
OraDynaset.Update
</pre>
<p><span class="bold">OraParameter Example</span></p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim EnameListNew as OraCollection
 
'Create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'Create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'create a new OraCollection object from the database
set EnameListNew = OraDatabase.CreateOraObject("ENAMELIST")
 
'set EnameListNew's element values
EnameListNew(1)  = "Nasser"
EnameListNew(2) =  "Chris"
EnameListNew(3) =  "Gopal"
 
'create an input OraParameter object representing EnameList collection bind 'Variable
 
OraDatabase.Parameters.Add "ENAMES", Null, ORAPARM_INPUT, ORATYPE_VARRAY, _ 
                "ENAMELIST"
 
'set the ENAMES parameter value to EnameListNew
OraDatabase.Parameters("ENAMES").Value  = EnameListNew
 
'execute the insert sql statement 
OraDatabase.ExecuteSQL ("insert into department values (40,'DEVELOPMENT', " &amp; _ 
              ":ENAMES)")
</pre>
<a id="OOFOL375" name="OOFOL375"></a><a id="sthref611" name="sthref611"></a>
<p class="subhead2">Example: Collection with Object Type Elements</p>
<p>The following example illustrates the use of an Oracle collection having elements of object type.</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim OraDynaset as OraDynaset
Dim CourseList as OraCollection
Dim Course as OraObject
 
'create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'create a dynaset object from division
set OraDynaset = OraDatabase.CreateDynaset("select * from division", 0&amp;)
 
'retrieve a Courses column from Division. 
'Here Value property of OraField object returns CourseList OraCollection
 
set CourseList = OraDynaset.Fields("Courses").Value
'retrieve the element value of the CourseList at index 1. 
'Here element value is returned as Course OraObject
set Course = CourseList(1)
 
'retrieve course_no and title attribute of the Course
msgbox Course.course_no
msgbox Course.title
 
'move to next row
OraDynaset.MoveNext
 
'now CourseList object represents collection value for the second row 
'and course OraObject 'represents the element value at index 1. 
'retrieve course_no and title attribute of the Course.
msgbox Course.course_no
msgbox Course.title
</pre>
<a id="OOFOL376" name="OOFOL376"></a><a id="sthref612" name="sthref612"></a>
<p class="subhead2">Example: Creating a SAFEARRAY Variant from a Collection</p>
<p>The following example illustrates how to get and set a SAFEARRAY <code>Variant</code> with an Oracle collection.</p>
<p><span class="bold">Creating SAFEARRAY Variant from a Collection</span></p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim OraDynaset as OraDynaset
Dim EnameList as OraCollection
Dim EnameArray as Variant
 
'create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'create a dynaset object from department
set OraDynaset = OraDatabase.CreateDynaset("select * from department", 0&amp;)
 
'retrieve a Enames column from Department. 
'Here Value property of OraField objectreturns EnameList OraCollection
set EnameList = OraDynaset.Fields("Enames").Value
 
'get the Variant SAFEARRAY from the collection. 
EnameArray = EnameList.SafeArray
 
'display the individual elements of EnameArray
msgbox EnameArray(0)
msgbox EnameArray(1)
msgbox EnameArray(2)
</pre>
<p><span class="bold">Setting SAFEARRAY Variant to the Collection</span></p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim EnameList as OraCollection
Dim EnameArray() As String
ReDim EnameArray(3)
 
'Create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'Create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger", 0&amp;)
 
'create an Empty uninitialized input OraParameter object 
'represent EnameList collection bind Variable
OraDatabase.Parameters.Add "ENAMES", Empty, ORAPARM_INPUT, _
                            ORATYPE_VARRAY,"ENAMELIST"
 
'get the Empty uninitialized ENAMES parameter value
set EnameList = OraDatabase.Parameters("ENAMES").Value 
 
'initialize the EnameArray
EnameArray(0) = "Nasser"
EnameArray(1) = "Chris"
EnameArray(2) = "Gopal"
 
'set the EnameArray to EnameList's SafeArray
EnameList.SafeArray = EnameArray
 
'execute the insert sql statement 
OraDatabase.ExecuteSQL ("insert into department " &amp; _
                "values (40,'DEVELOPMENT', :ENAMES)")
</pre>
<a id="OOFOL377" name="OOFOL377"></a><a id="CBHIBBBD" name="CBHIBBBD"></a>
<p class="subhead2">Example: Creating a Dynaset from a Collection</p>
<p>The following example illustrates how to create a dynaset from an Oracle collection.</p>
<pre xml:space="preserve" class="oac_no_warn">Dim OraSession as OraSession
Dim OraDatabase as OraDatabase
Dim OraDynaset as OraDynaset
Dim CourseList as OraCollection
Dim Course as OraObject
Dim CourseListDyn as OraDynaset
 
'create the OraSession Object.
Set OraSession = CreateObject("OracleInProcServer.XOraSession")
 
'create the OraDatabase Object by opening a connection to Oracle.
Set OraDatabase = OraSession.OpenDatabase("ExampleDb", "scott/tiger",  0&amp;)
 
'create a dynaset object from division
set OraDynaset = OraDatabase.CreateDynaset("select * from division", 0&amp;)
 
'retrieve a Courses column from Division. Here Value 
'property of OraField object returns CourseList OraCollection
set CourseList = OraDynaset.Fields("Courses").Value
 
'create a input parameter for CourseList for nested table dynaset
OraDatabase.Parameters.Add "COURSELIST", CourseList, ORAPARM_INPUT, _
                            ORATYPE_TABLE, "COURSELIST"
 
'create a read only dynaset based on the CourseList. 
Set CourseListDyn = OraDatabase.CreateDynaset("select * from THE" &amp; _
          "(select CAST(:COURSELIST AS COURSELIST) from dual)", ORADYN_READONLY)
 
'dynaset can also be created from Oracle8 collection 
'using the following statement, which requires OO4O v8.1.x later
 
Set CourseListDyn = OraDatabase.CreateDynaset("select * from " &amp; _ 
           "TABLE(CAST(:COURSELIST AS COURSELIST))", ORADYN_READONLY)
 
'get the field values of the collection dynaset
msgbox CourseListDyn.Fields("title").Value
msgbox CourseListDyn.Fields("course_no").Value
 
'move the original dynaset to second row
Oradynaset.MoveNext
 
'set the new value of CourseList  collection from the second row of main dynaset
'to the "COURSELIST" parameter
OraDatabase.Parameters("COURSELIST").Value = CourseList
 
'refresh the collection dynaset. Now the collection dynaset values are refreshed
' with new collection value.
CourseListDyn.Refresh
 
'get the field values of the collection dynaset
msgbox CourseListDyn.Fields("title").Value
msgbox CourseListDyn.Fields("course_no").Value
</pre>
<a id="OOFOL378" name="OOFOL378"></a>
<p class="subhead2">Example: Collection Iterator</p>
<p>See <a href="sermthod055.htm#CIHFDEDC">"Example: OraCollection Iterator"</a> .</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="serobjch020.htm#BABDIJAH">OraParameter Object</a></p>
</li>
<li>
<p><a href="sermthod060.htm#BHBBEEEF">CreateOraObject (OraDatabase) Method</a></p>
</li>
<li>
<p><a href="advfeat.htm#BGBHIIHH">"Instantiating Oracle LOBs, Objects, and Collections"</a></p>
</li>
<li>
<p><a href="advfeat.htm#BGBCEDFA">"Oracle Collections"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<div class="footer">
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<col width="33%" />
<col width="*" />
<col width="33%" />
<tr>
<td align="left">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="serobjch007.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="serobjch009.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td style="font-size: 90%" align="center" class="copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
