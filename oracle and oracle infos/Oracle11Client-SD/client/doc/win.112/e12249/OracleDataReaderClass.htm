<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta http-equiv="Content-Language" content="en" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<meta name="robots" content="all" scheme="http://www.robotstxt.org/" />
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.1 Build 026" />
<meta name="Date" content="2010-01-27T18:54:9Z" />
<meta name="doctitle" content="Oracle&reg; Data Provider for .NET Developer's Guide 11g Release 2 (11.2)" />
<meta name="partno" content="E12249-01" />
<meta name="docid" content="ODPNT" />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />
<link rel="Stylesheet" href="../../dcommon/css/blafdoc.css" title="Default" type="text/css" />
<script type="text/javascript" src="../../dcommon/js/doccd.js">
</script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="OracleDatabaseClass.htm" title="Previous" type="text/html" />
<link rel="Next" href="OracleErrorClass.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e12249.pdf" title="PDF version" type="application/pdf" />
<title>OracleDataReader Class</title>
</head>
<body>
<div class="header">
<div class="zz-skip-header"><a name="top" id="top" href="#BEGIN">Skip Headers</a></div>
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top"><b>Oracle&reg; Data Provider for .NET Developer's Guide<br />
11<i>g</i> Release 2 (11.2)</b><br />
Part Number E12249-01</td>
<td valign="bottom" align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="OracleDatabaseClass.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="OracleErrorClass.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td align="right" valign="top" style="font-size: 90%"><a href="../e12249.pdf">View PDF</a></td>
</tr>
</table>
<a name="BEGIN" id="BEGIN"></a></div>
<div class="IND"><!-- End Header --><a id="i1003252" name="i1003252"></a>
<hr />
<div class="refsect1">
<h1 class="refsect1"><a id="sthref1288" name="sthref1288"></a>OracleDataReader Class</h1>
<p>An <code>OracleDataReader</code> object represents a forward-only, read-only, in-memory result set.</p>
<p>Unlike the <code>DataSet</code>, the <code>OracleDataReader</code> object stays connected and fetches one row at a time.</p>
<p>The following section contain related information:</p>
<ul>
<li>
<p><a href="featData.htm#i1007197">"Obtaining LONG and LONG RAW Data"</a>.</p>
</li>
<li>
<p><a href="featData.htm#i1006788">"Obtaining Data from an OracleDataReader Object"</a>.</p>
</li>
</ul>
<a id="sthref1289" name="sthref1289"></a>
<p class="subhead2">Class Inheritance</p>
<p><code>System.Object</code></p>
<p><code>&nbsp;&nbsp;System.MarshalByRefObject</code></p>
<p><code>&nbsp;&nbsp;&nbsp;&nbsp;System.Data.Common.DataReader</code></p>
<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Data.Common.DbDataReader</code> (ADO.NET 2.0 only)</p>
<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oracle.DataAccess.Client.OracleDataReader</code></p>
<a id="sthref1290" name="sthref1290"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public sealed class OracleDataReader : DbDataReader, IEnumerable, 
   IDataReader, IDisposable, IDataRecord
</pre>
<a id="sthref1291" name="sthref1291"></a>
<p class="subhead2">Thread Safety</p>
<p>All public static methods are thread-safe, although instance methods do not guarantee thread safety.</p>
<a id="sthref1292" name="sthref1292"></a>
<p class="subhead2">Remarks</p>
<p>An <code>OracleDataReader</code> instance is constructed by a call to the <code>ExecuteReader</code> method of the <code>OracleCommand</code> object. The only properties that can be accessed after the <code>DataReader</code> is closed or has been disposed, are <code>IsClosed</code> and <code>RecordsAffected</code>.</p>
<p>To minimize the number of open database cursors, <code>OracleDataReader</code> objects should be explicitly disposed.</p>
<a id="i1003289" name="i1003289"></a>
<p class="subhead2">Example</p>
<p>The following <code>OracleDataReader</code> example retrieves the data from the <code>EMP</code> table:</p>
<pre xml:space="preserve" class="oac_no_warn">/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,'KING','SOFTWARE ENGR', '5657');
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,'SCOTT','MANAGER', '5960');
commit;
 
*/
 
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
 
class OracleDataReaderSample
{
  static void Main()
  {
    string constr = "User Id=scott;Password=tiger;Data Source=oracle";
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    string cmdstr = "SELECT * FROM EMPINFO";
    OracleConnection connection = new OracleConnection(constr);
    OracleCommand cmd = new OracleCommand(cmdstr, con);
 
    OracleDataReader reader = cmd.ExecuteReader();
 
    // Declare the variables to retrieve the data in EmpInfo
    short empNo;
    string empName;
    DateTime hireDate;
    double salary;
    string jobDesc;
    byte[] byteCodes = new byte[10];
 
    // Read the next row until end of row
    while (reader.Read())
    {
      empNo = reader.GetInt16(0);
      Console.WriteLine("Employee number: " + empNo);
      empName = reader.GetString(1);
      Console.WriteLine("Employee name: " + empName);
 
      // The following columns can have NULL value, so it
      //   is important to call IsDBNull before getting the column data
      if (!reader.IsDBNull(2))
      {
        hireDate = reader.GetDateTime(2);
        Console.WriteLine("Hire date: " + hireDate);
      }
 
      if (!reader.IsDBNull(3))
      {
        salary = reader.GetDouble(3);
        Console.WriteLine("Salary: " + salary);
      }
 
      if (!reader.IsDBNull(4))
      {
        jobDesc = reader.GetString(4);
        Console.WriteLine("Job Description: " + jobDesc);
      }
 
      if (!reader.IsDBNull(5))
      {
        long len = reader.GetBytes(5, 0, byteCodes, 0, 10);
 
        Console.Write("Byte codes: ");
        for (int i = 0; i &lt; len; i++)
          Console.Write(byteCodes[i].ToString("x"));
 
        Console.WriteLine();
      }
 
      Console.WriteLine();
    } 
 
    // Clean up
    reader.Dispose();
    con.Dispose();
  }
}
</pre>
<a id="sthref1293" name="sthref1293"></a>
<p class="subhead2">Requirements</p>
<p>Namespace: <code>Oracle.DataAccess.Client</code></p>
<p>Assembly: <code>Oracle.DataAccess.dll</code></p>
<p>Microsoft .NET Framework Version: 2.0 or later</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#i1003884">OracleDataReader Static Methods</a></p>
</li>
<li>
<p><a href="#i1003927">OracleDataReader Properties</a></p>
</li>
<li>
<p><a href="#i1004329">OracleDataReader Public Methods</a></p>
</li>
<li>
<p><a href="#i1006277"><span class="bold">OracleDataReader SchemaTable</span></a></p>
</li>
</ul>
</div>
<a id="i1003412" name="i1003412"></a>
<hr />
<h2 class="refsect2">OracleDataReader Members<a id="sthref1294" name="sthref1294"></a></h2>
<p><code>OracleDataReader</code> members are listed in the following tables.</p>
<a id="sthref1295" name="sthref1295"></a>
<p class="subhead1">OracleDataReader Static Methods</p>
<p>The <code>OracleDataReader</code> static method is listed in <a href="#g1101413">Table 5-43</a>.</p>
<div class="tblruleformal"><a id="sthref1296" name="sthref1296"></a><a id="g1101413" name="g1101413"></a>
<p class="titleintable">Table 5-43 OracleDataReader Static Method</p>
<table class="RuleFormal" title="OracleDataReader Static Method " summary="Rows are static methods. first column is name, second column is description" dir="ltr" border="1" width="100%" frame="border" rules="all" cellpadding="3" cellspacing="0">
<col width="36%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t205">Method</th>
<th align="left" valign="bottom" id="r1c2-t205">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t205" headers="r1c1-t205">
<p><code>Equals</code></p>
</td>
<td align="left" headers="r2c1-t205 r1c2-t205">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<a id="sthref1297" name="sthref1297"></a>
<p class="subhead1">OracleDataReader Properties</p>
<p><code>OracleDataReader</code> properties are listed in <a href="#CHDDCCBB">Table 5-44</a>.</p>
<div class="tblruleformal"><a id="sthref1298" name="sthref1298"></a><a id="CHDDCCBB" name="CHDDCCBB"></a>
<p class="titleintable">Table 5-44 OracleDataReader Properties</p>
<table class="RuleFormal" title="OracleDataReader Properties " summary="Rows are properties. first column is name, second column is description" dir="ltr" border="1" width="100%" frame="border" rules="all" cellpadding="3" cellspacing="0">
<col width="34%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t206">Property</th>
<th align="left" valign="bottom" id="r1c2-t206">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t206" headers="r1c1-t206">
<p><a href="#i1004015">Depth</a></p>
</td>
<td align="left" headers="r2c1-t206 r1c2-t206">
<p>Gets a value indicating the depth of nesting for the current row</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t206" headers="r1c1-t206">
<p><a href="#i1004048">FetchSize</a></p>
</td>
<td align="left" headers="r3c1-t206 r1c2-t206">
<p>Specifies the size of <code>OracleDataReader</code>'s internal cache</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t206" headers="r1c1-t206">
<p><a href="#i1004093">FieldCount</a></p>
</td>
<td align="left" headers="r4c1-t206 r1c2-t206">
<p>Gets the number of columns in the result set</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t206" headers="r1c1-t206">
<p><a href="#CHDFIJDF">HasRows</a></p>
</td>
<td align="left" headers="r5c1-t206 r1c2-t206">
<p>Indicates whether the <code>OracleDataReader</code> has one or more rows</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t206" headers="r1c1-t206">
<p><a href="#CHDECHGG">HiddenFieldCount</a></p>
</td>
<td align="left" headers="r6c1-t206 r1c2-t206">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are hidden</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t206" headers="r1c1-t206">
<p><a href="#i1004126">IsClosed</a></p>
</td>
<td align="left" headers="r7c1-t206 r1c2-t206">
<p>Indicates whether or not the data reader is closed</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t206" headers="r1c1-t206">
<p><a href="#i1004157">Item</a></p>
</td>
<td align="left" headers="r8c1-t206 r1c2-t206">
<p>Gets the value of the column (Overloaded)</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t206" headers="r1c1-t206">
<p><a href="#BABEAIFD">InitialLOBFetchSize</a></p>
</td>
<td align="left" headers="r9c1-t206 r1c2-t206">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for LOB columns</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t206" headers="r1c1-t206">
<p><a href="#i1004258">InitialLONGFetchSize</a></p>
</td>
<td align="left" headers="r10c1-t206 r1c2-t206">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for <code>LONG</code> and <code>LONG</code> <code>RAW</code> columns</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t206" headers="r1c1-t206">
<p><a href="#i1004297">RecordsAffected</a></p>
</td>
<td align="left" headers="r11c1-t206 r1c2-t206">
<p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t206" headers="r1c1-t206">
<p><a href="#BABGFBBI">RowSize</a></p>
</td>
<td align="left" headers="r12c1-t206 r1c2-t206">
<p>Gets the amount of memory the internal cache of the <code>OracleDataReader</code> needs to store one row of data.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t206" headers="r1c1-t206">
<p><a href="#CHDEDDCB">VisibleFieldCount</a></p>
</td>
<td align="left" headers="r13c1-t206 r1c2-t206">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are not hidden</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<a id="sthref1299" name="sthref1299"></a>
<p class="subhead1">OracleDataReader Public Methods</p>
<p><code>OracleDataReader</code> public methods are listed in <a href="#CHDICHJH">Table 5-45</a>.</p>
<div class="tblruleformal"><a id="sthref1300" name="sthref1300"></a><a id="CHDICHJH" name="CHDICHJH"></a>
<p class="titleintable">Table 5-45 OracleDataReader Public Methods</p>
<table class="RuleFormal" title="OracleDataReader Public Methods " summary="Rows are public methods. first column is name, second column is description" dir="ltr" border="1" width="100%" frame="border" rules="all" cellpadding="3" cellspacing="0">
<col width="36%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t207">Public Method</th>
<th align="left" valign="bottom" id="r1c2-t207">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t207" headers="r1c1-t207">
<p><a href="#i1004711">Close</a></p>
</td>
<td align="left" headers="r2c1-t207 r1c2-t207">
<p>Closes the <code>OracleDataReader</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t207" headers="r1c1-t207">
<p><code>CreateObjRef</code></p>
</td>
<td align="left" headers="r3c1-t207 r1c2-t207">
<p>Inherited from <code>System.MarshalByRefObject</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t207" headers="r1c1-t207">
<p><a href="#i1004747">Dispose</a></p>
</td>
<td align="left" headers="r4c1-t207 r1c2-t207">
<p>Releases any resources or memory allocated by the object</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t207" headers="r1c1-t207">
<p><code>Equals</code></p>
</td>
<td align="left" headers="r5c1-t207 r1c2-t207">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t207" headers="r1c1-t207">
<p><a href="#CHDGEBAJ">GetBoolean</a></p>
</td>
<td align="left" headers="r6c1-t207 r1c2-t207">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t207" headers="r1c1-t207">
<p><a href="#i1004775">GetByte</a></p>
</td>
<td align="left" headers="r7c1-t207 r1c2-t207">
<p>Returns the byte value of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t207" headers="r1c1-t207">
<p><a href="#i1004813">GetBytes</a></p>
</td>
<td align="left" headers="r8c1-t207 r1c2-t207">
<p>Populates the provided byte array with up to the maximum number of bytes, from the specified offset (in bytes) of the column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t207" headers="r1c1-t207">
<p><a href="#CHDGEBHJ">GetChar</a></p>
</td>
<td align="left" headers="r9c1-t207 r1c2-t207">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t207" headers="r1c1-t207">
<p><a href="#i1004859">GetChars</a></p>
</td>
<td align="left" headers="r10c1-t207 r1c2-t207">
<p>Populates the provided character array with up to the maximum number of characters, from the specified offset (in characters) of the column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t207" headers="r1c1-t207">
<p><code>GetData</code></p>
</td>
<td align="left" headers="r11c1-t207 r1c2-t207">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t207" headers="r1c1-t207">
<p><a href="#i1004907">GetDataTypeName</a></p>
</td>
<td align="left" headers="r12c1-t207 r1c2-t207">
<p>Returns the ODP.NET type name of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t207" headers="r1c1-t207">
<p><a href="#i1004947">GetDateTime</a></p>
</td>
<td align="left" headers="r13c1-t207 r1c2-t207">
<p>Returns the <code>DateTime</code> value of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t207" headers="r1c1-t207">
<p><a href="#i1004984">GetDecimal</a></p>
</td>
<td align="left" headers="r14c1-t207 r1c2-t207">
<p>Returns the <code>decimal</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r15c1-t207" headers="r1c1-t207">
<p><a href="#i1005021">GetDouble</a></p>
</td>
<td align="left" headers="r15c1-t207 r1c2-t207">
<p>Returns the <code>double</code> value of the specified <code>NUMBER</code> column or <code>BINARY_DOUBLE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r16c1-t207" headers="r1c1-t207">
<p><a href="#BABHCADG">GetEnumerator</a></p>
</td>
<td align="left" headers="r16c1-t207 r1c2-t207">
<p>Returns an <code>IEnumerator</code> that can be used to iterate through the collection</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r17c1-t207" headers="r1c1-t207">
<p><a href="#i1005058">GetFieldType</a></p>
</td>
<td align="left" headers="r17c1-t207 r1c2-t207">
<p>Returns the <code>Type</code> of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r18c1-t207" headers="r1c1-t207">
<p><a href="#i1005092">GetFloat</a></p>
</td>
<td align="left" headers="r18c1-t207 r1c2-t207">
<p>Returns the <code>float</code> value of the specified <code>NUMBER</code> column or <code>BINARY_FLOAT</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r19c1-t207" headers="r1c1-t207">
<p><a href="#CHDGJBHC">GetGuid</a></p>
</td>
<td align="left" headers="r19c1-t207 r1c2-t207">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r20c1-t207" headers="r1c1-t207">
<p><code>GetHashCode</code></p>
</td>
<td align="left" headers="r20c1-t207 r1c2-t207">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r21c1-t207" headers="r1c1-t207">
<p><a href="#i1005130">GetInt16</a></p>
</td>
<td align="left" headers="r21c1-t207 r1c2-t207">
<p>Returns the <code>Int16</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r22c1-t207" headers="r1c1-t207">
<p><a href="#i1005172">GetInt32</a></p>
</td>
<td align="left" headers="r22c1-t207 r1c2-t207">
<p>Returns the <code>Int32</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r23c1-t207" headers="r1c1-t207">
<p><a href="#i1005214">GetInt64</a></p>
</td>
<td align="left" headers="r23c1-t207 r1c2-t207">
<p>Returns the <code>Int64</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r24c1-t207" headers="r1c1-t207">
<p><code>GetLifetimeService</code></p>
</td>
<td align="left" headers="r24c1-t207 r1c2-t207">
<p>Inherited by System.<code>MarshalByRefObject</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r25c1-t207" headers="r1c1-t207">
<p><a href="#i1005256">GetName</a></p>
</td>
<td align="left" headers="r25c1-t207 r1c2-t207">
<p>Returns the name of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r26c1-t207" headers="r1c1-t207">
<p><a href="#i1005290">GetOracleBFile</a></p>
</td>
<td align="left" headers="r26c1-t207 r1c2-t207">
<p>Returns an <code>OracleBFile</code> object of the specified <code>BFILE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r27c1-t207" headers="r1c1-t207">
<p><a href="#i1005325">GetOracleBinary</a></p>
</td>
<td align="left" headers="r27c1-t207 r1c2-t207">
<p>Returns an <code>OracleBinary</code> structure of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r28c1-t207" headers="r1c1-t207">
<p><a href="#i1005365">GetOracleBlob</a></p>
</td>
<td align="left" headers="r28c1-t207 r1c2-t207">
<p>Returns an <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r29c1-t207" headers="r1c1-t207">
<p><a href="#i1005400">GetOracleBlobForUpdate</a></p>
</td>
<td align="left" headers="r29c1-t207 r1c2-t207">
<p>Returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r30c1-t207" headers="r1c1-t207">
<p><a href="#i1005577">GetOracleClob</a></p>
</td>
<td align="left" headers="r30c1-t207 r1c2-t207">
<p>Returns an <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r31c1-t207" headers="r1c1-t207">
<p><a href="#i1005619">GetOracleClobForUpdate</a></p>
</td>
<td align="left" headers="r31c1-t207 r1c2-t207">
<p>Returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r32c1-t207" headers="r1c1-t207">
<p><a href="#i1005795">GetOracleDate</a></p>
</td>
<td align="left" headers="r32c1-t207 r1c2-t207">
<p>Returns an <code>OracleDate</code> structure of the specified <code>DATE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r33c1-t207" headers="r1c1-t207">
<p><a href="#i1005837">GetOracleDecimal</a></p>
</td>
<td align="left" headers="r33c1-t207 r1c2-t207">
<p>Returns an <code>OracleDecimal</code> structure of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r34c1-t207" headers="r1c1-t207">
<p><a href="#i1005872">GetOracleIntervalDS</a></p>
</td>
<td align="left" headers="r34c1-t207 r1c2-t207">
<p>Returns an <code>OracleIntervalDS</code> structure of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r35c1-t207" headers="r1c1-t207">
<p><a href="#i1005907">GetOracleIntervalYM</a></p>
</td>
<td align="left" headers="r35c1-t207 r1c2-t207">
<p>Returns an <code>OracleIntervalYM</code> structure of the specified <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r36c1-t207" headers="r1c1-t207">
<p><a href="#BABFEHBI">GetOracleRef</a></p>
</td>
<td align="left" headers="r36c1-t207 r1c2-t207">
<p>Returns an <code>OracleRef</code> object of the specified <code>REF</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r37c1-t207" headers="r1c1-t207">
<p><a href="#i1005942">GetOracleString</a></p>
</td>
<td align="left" headers="r37c1-t207 r1c2-t207">
<p>Returns an <code>OracleString</code> structure of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r38c1-t207" headers="r1c1-t207">
<p><a href="#i1005989">GetOracleTimeStamp</a></p>
</td>
<td align="left" headers="r38c1-t207 r1c2-t207">
<p>Returns an <code>OracleTimeStamp</code> structure of the Oracle <code>TimeStamp</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r39c1-t207" headers="r1c1-t207">
<p><a href="#i1006025">GetOracleTimeStampLTZ</a></p>
</td>
<td align="left" headers="r39c1-t207 r1c2-t207">
<p>Returns an <code>OracleTimeStampLTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r40c1-t207" headers="r1c1-t207">
<p><a href="#i1006061">GetOracleTimeStampTZ</a></p>
</td>
<td align="left" headers="r40c1-t207 r1c2-t207">
<p>Returns an <code>OracleTimeStampTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r41c1-t207" headers="r1c1-t207">
<p><a href="#i1021203">GetOracleXmlType</a></p>
</td>
<td align="left" headers="r41c1-t207 r1c2-t207">
<p>Returns an <code>OracleXmlType</code> object of the specified <code>XMLType</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r42c1-t207" headers="r1c1-t207">
<p><a href="#i1006136">GetOracleValue</a></p>
</td>
<td align="left" headers="r42c1-t207 r1c2-t207">
<p>Returns the specified column value as a ODP.NET type</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r43c1-t207" headers="r1c1-t207">
<p><a href="#i1006175">GetOracleValues</a></p>
</td>
<td align="left" headers="r43c1-t207 r1c2-t207">
<p>Gets all the column values as ODP.NET types</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r44c1-t207" headers="r1c1-t207">
<p><a href="#i1006226">GetOrdinal</a></p>
</td>
<td align="left" headers="r44c1-t207 r1c2-t207">
<p>Returns the <code>0</code>-based ordinal (or index) of the specified column name</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r45c1-t207" headers="r1c1-t207">
<p><a href="#CHDGBEAA">GetProviderSpecificFieldType</a></p>
</td>
<td align="left" headers="r45c1-t207 r1c2-t207">
<p>Returns the provider-specific type of the specified column</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r46c1-t207" headers="r1c1-t207">
<p><a href="#CHDIIBDH">GetProviderSpecificValue</a></p>
</td>
<td align="left" headers="r46c1-t207 r1c2-t207">
<p>Returns an object that represents the underlying provider-specific value of the specified ordinal</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r47c1-t207" headers="r1c1-t207">
<p><a href="#CHDEECDJ">GetProviderSpecificValues</a></p>
</td>
<td align="left" headers="r47c1-t207 r1c2-t207">
<p>Returns an array of objects that represent the underlying provider-specific values</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r48c1-t207" headers="r1c1-t207">
<p><a href="#i1006262">GetSchemaTable</a></p>
</td>
<td align="left" headers="r48c1-t207 r1c2-t207">
<p>Returns a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r49c1-t207" headers="r1c1-t207">
<p><a href="#i1006481">GetString</a></p>
</td>
<td align="left" headers="r49c1-t207 r1c2-t207">
<p>Returns the string value of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r50c1-t207" headers="r1c1-t207">
<p><a href="#i1006518">GetTimeSpan</a></p>
</td>
<td align="left" headers="r50c1-t207 r1c2-t207">
<p>Returns the <code>TimeSpan</code> value of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r51c1-t207" headers="r1c1-t207">
<p><code>GetType</code></p>
</td>
<td align="left" headers="r51c1-t207 r1c2-t207">
<p>Inherited from <code>System.Object</code> class</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r52c1-t207" headers="r1c1-t207">
<p><a href="#i1006555">GetValue</a></p>
</td>
<td align="left" headers="r52c1-t207 r1c2-t207">
<p>Returns the column value as a .NET type</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r53c1-t207" headers="r1c1-t207">
<p><a href="#i1006589">GetValues</a></p>
</td>
<td align="left" headers="r53c1-t207 r1c2-t207">
<p>Gets all the column values as .NET types</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r54c1-t207" headers="r1c1-t207">
<p><a href="#i1006627">GetXmlReader</a></p>
</td>
<td align="left" headers="r54c1-t207 r1c2-t207">
<p>Returns the value of an <code>XMLType</code> column as an instance of an .NET <code>XmlTextReader</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r55c1-t207" headers="r1c1-t207">
<p><a href="#i1006661">IsDBNull</a></p>
</td>
<td align="left" headers="r55c1-t207 r1c2-t207">
<p>Indicates whether or not the column value is null</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r56c1-t207" headers="r1c1-t207">
<p><a href="#i1006705">NextResult</a></p>
</td>
<td align="left" headers="r56c1-t207 r1c2-t207">
<p>Advances the data reader to the next result set when reading the results</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r57c1-t207" headers="r1c1-t207">
<p><a href="#i1006737">Read</a></p>
</td>
<td align="left" headers="r57c1-t207 r1c2-t207">
<p>Reads the next row in the result set</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r58c1-t207" headers="r1c1-t207">
<p><code>ToString</code></p>
</td>
<td align="left" headers="r58c1-t207 r1c2-t207">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
</ul>
</div>
<a id="i1003884" name="i1003884"></a>
<hr />
<h2 class="refsect2">OracleDataReader Static Methods<a id="sthref1301" name="sthref1301"></a></h2>
<p>The <code>OracleDataReader</code> static method is listed in <a href="#g1101636">Table 5-46</a>.</p>
<div class="tblruleformal"><a id="sthref1302" name="sthref1302"></a><a id="g1101636" name="g1101636"></a>
<p class="titleintable">Table 5-46 OracleDataReader Static Method</p>
<table class="RuleFormal" title="OracleDataReader Static Method" summary="Rows are static methods. first column is name, second column is description" dir="ltr" border="1" width="100%" frame="border" rules="all" cellpadding="3" cellspacing="0">
<col width="31%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t209">Method</th>
<th align="left" valign="bottom" id="r1c2-t209">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t209" headers="r1c1-t209">
<p><code>Equals</code></p>
</td>
<td align="left" headers="r2c1-t209 r1c2-t209">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1003927" name="i1003927"></a>
<hr />
<h2 class="refsect2">OracleDataReader Properties<a id="sthref1303" name="sthref1303"></a></h2>
<p><code>OracleDataReader</code> properties are listed in <a href="#g1101650">Table 5-47</a>.</p>
<div class="tblruleformal"><a id="sthref1304" name="sthref1304"></a><a id="g1101650" name="g1101650"></a>
<p class="titleintable">Table 5-47 OracleDataReader Properties</p>
<table class="RuleFormal" title="OracleDataReader Properties " summary="Rows are properties. first column is name, second column is description" dir="ltr" border="1" width="100%" frame="border" rules="all" cellpadding="3" cellspacing="0">
<col width="34%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t211">Property</th>
<th align="left" valign="bottom" id="r1c2-t211">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t211" headers="r1c1-t211">
<p><a href="#i1004015">Depth</a></p>
</td>
<td align="left" headers="r2c1-t211 r1c2-t211">
<p>Gets a value indicating the depth of nesting for the current row</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t211" headers="r1c1-t211">
<p><a href="#i1004048">FetchSize</a></p>
</td>
<td align="left" headers="r3c1-t211 r1c2-t211">
<p>Specifies the size of <code>OracleDataReader</code>'s internal cache</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t211" headers="r1c1-t211">
<p><a href="#i1004093">FieldCount</a></p>
</td>
<td align="left" headers="r4c1-t211 r1c2-t211">
<p>Gets the number of columns in the result set</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t211" headers="r1c1-t211">
<p><a href="#CHDFIJDF">HasRows</a></p>
</td>
<td align="left" headers="r5c1-t211 r1c2-t211">
<p>Indicates whether the <code>OracleDataReader</code> has one or more rows</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t211" headers="r1c1-t211">
<p><a href="#CHDECHGG">HiddenFieldCount</a></p>
</td>
<td align="left" headers="r6c1-t211 r1c2-t211">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are hidden</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t211" headers="r1c1-t211">
<p><a href="#i1004126">IsClosed</a></p>
</td>
<td align="left" headers="r7c1-t211 r1c2-t211">
<p>Indicates whether or not the data reader is closed</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t211" headers="r1c1-t211">
<p><a href="#i1004157">Item</a></p>
</td>
<td align="left" headers="r8c1-t211 r1c2-t211">
<p>Gets the value of the column (Overloaded)</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t211" headers="r1c1-t211">
<p><a href="#BABEAIFD">InitialLOBFetchSize</a></p>
</td>
<td align="left" headers="r9c1-t211 r1c2-t211">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for LOB columns</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t211" headers="r1c1-t211">
<p><a href="#i1004258">InitialLONGFetchSize</a></p>
</td>
<td align="left" headers="r10c1-t211 r1c2-t211">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for <code>LONG</code> and <code>LONG</code> <code>RAW</code> columns</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t211" headers="r1c1-t211">
<p><a href="#i1004297">RecordsAffected</a></p>
</td>
<td align="left" headers="r11c1-t211 r1c2-t211">
<p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t211" headers="r1c1-t211">
<p><a href="#BABGFBBI">RowSize</a></p>
</td>
<td align="left" headers="r12c1-t211 r1c2-t211">
<p>Gets the amount of memory the internal cache of the <code>OracleDataReader</code> needs to store one row of data</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t211" headers="r1c1-t211">
<p><a href="#CHDEDDCB">VisibleFieldCount</a></p>
</td>
<td align="left" headers="r13c1-t211 r1c2-t211">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are not hidden</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004015" name="i1004015"></a>
<h3 class="refsect3">Depth</h3>
<p>This property gets a value indicating the depth of nesting for the current row.</p>
<a id="sthref1305" name="sthref1305"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override int Depth {get;}
</pre>
<a id="sthref1306" name="sthref1306"></a>
<p class="subhead2">Property Value</p>
<p>The depth of nesting for the current row.</p>
<a id="sthref1307" name="sthref1307"></a>
<p class="subhead2">Implements</p>
<p><code>IDataReader</code></p>
<a id="sthref1308" name="sthref1308"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<a id="sthref1309" name="sthref1309"></a>
<p class="subhead2">Remarks</p>
<p>Default = <code>0</code></p>
<p>This property always returns zero because Oracle does not support nesting.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="CHDHGEBF" name="CHDHGEBF"></a><a id="i1004048" name="i1004048"></a>
<h3 class="refsect3">FetchSize</h3>
<p>This property specifies the size of <code>OracleDataReader</code>'s internal cache.</p>
<a id="sthref1310" name="sthref1310"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public long FetchSize {get; set;} 
</pre>
<a id="sthref1311" name="sthref1311"></a>
<p class="subhead2">Property Value</p>
<p>A <code>long</code> that specifies the amount of memory (in bytes) that the <code>OracleDataReader</code> uses for its internal cache.</p>
<a id="sthref1312" name="sthref1312"></a>
<p class="subhead2">Exceptions</p>
<p><code>ArgumentException</code> - The <code>FetchSize</code> value specified is invalid.</p>
<a id="sthref1313" name="sthref1313"></a>
<p class="subhead2">Remarks</p>
<p>Default = The <code>OracleCommand</code>'s <code>FetchSize</code> property value.</p>
<p>The <code>FetchSize</code> property is inherited by the <code>OracleDataReader</code> that is created by a command execution returning a result set. The <code>FetchSize</code> property on the <code>OracleDataReader</code> object determines the amount of data fetched into its internal cache for each database round-trip.</p>
<p>The <code>RowSize</code> and <code>FetchSize</code> properties handle UDT and <code>XMLType</code> data differently than other scalar data types. Because only a reference to the UDT and <code>XMLType</code> data is stored in the ODP.NET's internal cache, the <code>RowSize</code> property accounts for only the memory needed for the reference (which is very small) and not the actual size of the UDT and <code>XMLType</code> data. Thus, applications can inadvertently fetch a large number of UDT or <code>XMLType</code> instances from the database in a single database round-trip. This is because the actual size of UDT and <code>XMLType</code> data does not count against the <code>FetchSize,</code> and it would require numerous UDT and <code>XMLType</code> references to fill up the default cache size of 131072 bytes. Therefore, when fetching UDT or <code>XMLType</code> data, the <code>FetchSize</code> property must be appropriately configured to control the number of UDT and <code>XMLType</code> instances that are to be fetched, rather than the amount of the actual UDT and <code>XMLType</code> data to be fetched.</p>
<p>NOTE: For LOB and <code>LONG</code> data types, only the sizes specified in the <code>InitialLOBFetchSize</code> and <code>InitialLONGFetchSize</code> properties are accounted for by the <code>RowSize</code> property in addition to the metadata and reference information that is maintained by the cache for each LOB in the select list.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><code>OracleDataReader</code> <a href="#CHDJAAAB">"RowSize"</a></p>
</li>
<li>
<p><code>OracleCommand</code> <a href="OracleCommandClass.htm#i998451">"ExecuteReader()"</a></p>
</li>
<li>
<p><code>OracleCommand</code> <a href="OracleCommandClass.htm#i998028">"RowSize"</a></p>
</li>
</ul>
</div>
<a id="CHDIAHCA" name="CHDIAHCA"></a><a id="i1004093" name="i1004093"></a>
<h3 class="refsect3">FieldCount</h3>
<p>This property returns the number of columns in the result set.</p>
<a id="sthref1314" name="sthref1314"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override int FieldCount {get;}
</pre>
<a id="sthref1315" name="sthref1315"></a>
<p class="subhead2">Property Value</p>
<p>The number of columns in the result set if one exists, otherwise <code>0</code>.</p>
<a id="sthref1316" name="sthref1316"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1317" name="sthref1317"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<a id="sthref1318" name="sthref1318"></a>
<p class="subhead2">Remarks</p>
<p>Default = <code>0</code></p>
<p>This property has a value of 0 for queries that do not return result sets.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="DAFFDHIC" name="DAFFDHIC"></a><a id="CHDFIJDF" name="CHDFIJDF"></a>
<h3 class="refsect3">HasRows</h3>
<p>This property indicates whether the <code>OracleDataReader</code> has one or more rows.</p>
<a id="sthref1319" name="sthref1319"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override bool HasRows {get;}
</pre>
<a id="sthref1320" name="sthref1320"></a>
<p class="subhead2">Return Value</p>
<p><code>bool</code></p>
<a id="sthref1321" name="sthref1321"></a>
<p class="subhead2">Remarks</p>
<p><code>HasRows</code> indicates whether or not the <code>OracleDataReader</code> has any rows.</p>
<p>The value of <code>HasRows</code> does not change based on the row position. For example, even if the application has read all the rows from the result set and the next Read method invocation will return false, the <code>HasRows</code> property still returns true since the result set was not empty to begin with.</p>
<p>Rows are fetched to determine the emptiness of the <code>OracleDataReader</code> when <code>HasRows</code> property is accessed for the first time after the creation of the <code>OracleDataReader</code> object.</p>
<a id="sthref1322" name="sthref1322"></a>
<p class="subhead2">Example</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
 
using System;
using Oracle.DataAccess.Client; 
 
class HasRowsSample
{
  static void Main()
  {
    string constr = "User Id=scott;Password=tiger;Data Source=oracle";
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    OracleCommand cmd = new OracleCommand(
      "select * from emp where empno = 9999", con);
 
    OracleDataReader reader = cmd.ExecuteReader();
 
    if (!reader.HasRows)
      Console.WriteLine("The result set is empty.");
    else
      Console.WriteLine("The result set is not empty.");
 
    con.Dispose();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><code><a href="http://msdn.microsoft.com/library">http://msdn.microsoft.com/library</a></code> for detailed information about this Microsoft .NET Framework 1.1 feature</p>
</li>
</ul>
</div>
<a id="BABBCCEA" name="BABBCCEA"></a><a id="CHDECHGG" name="CHDECHGG"></a>
<h3 class="refsect3">HiddenFieldCount</h3>
<p>This property gets the number of fields in the <code>OracleDataReader</code> that are hidden.</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
<a id="sthref1323" name="sthref1323"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public int HiddenFieldcount { get; }
</pre>
<a id="sthref1324" name="sthref1324"></a>
<p class="subhead2">Property Value</p>
<p>The number of fields in the <code>OracleDataReader</code> that are hidden.</p>
<a id="sthref1325" name="sthref1325"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<a id="sthref1326" name="sthref1326"></a>
<p class="subhead2">Remarks</p>
<p><code>OracleDataReader.FieldCount</code> and <code>OracleDataReader.VisibleFieldCount</code> return the visible field count.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#CHDIEIHA">"VisibleFieldCount"</a></p>
</li>
<li>
<p><a href="#CHDIAHCA">"FieldCount"</a></p>
</li>
</ul>
</div>
<a id="i1004126" name="i1004126"></a>
<h3 class="refsect3">IsClosed</h3>
<p>This property indicates whether or not the data reader is closed.</p>
<a id="sthref1327" name="sthref1327"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override bool IsClosed {get;}
</pre>
<a id="sthref1328" name="sthref1328"></a>
<p class="subhead2">Property Value</p>
<p>If the <code>OracleDataReader</code> is in a closed state, returns <code>true</code>; otherwise, returns <code>false</code>.</p>
<a id="sthref1329" name="sthref1329"></a>
<p class="subhead2">Implements</p>
<p><code>IDataReader</code></p>
<a id="sthref1330" name="sthref1330"></a>
<p class="subhead2">Remarks</p>
<p>Default = <code>true</code></p>
<p><code>IsClosed</code> and <code>RecordsAffected</code> are the only two properties that are accessible after the <code>OracleDataReader</code> is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004157" name="i1004157"></a>
<h3 class="refsect3">Item</h3>
<p>This property gets the value of the column in .NET data type.</p>
<a id="sthref1331" name="sthref1331"></a>
<p class="subhead2">Overload List:</p>
<ul>
<li>
<p><a href="#i1004189">Item [index]</a></p>
<p>This property gets the .NET <code>Value</code> of the column specified by the column index.</p>
</li>
<li>
<p><a href="#i1004223">Item [string]</a></p>
<p>This property gets the .NET <code>Value</code> of the column specified by the column name.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004189" name="i1004189"></a>
<h3 class="refsect3">Item [index]</h3>
<p>This property gets the .NET <code>Value</code> of the column specified by the column index.</p>
<a id="sthref1332" name="sthref1332"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override object this[int index] {get;}
</pre>
<a id="sthref1333" name="sthref1333"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based index of the column.</p>
</li>
</ul>
<a id="sthref1334" name="sthref1334"></a>
<p class="subhead2">Property Value</p>
<p>The .NET value of the specified column.</p>
<a id="sthref1335" name="sthref1335"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1336" name="sthref1336"></a>
<p class="subhead2">Remarks</p>
<p>Default = Not Applicable</p>
<p>In C#, this property is the indexer for this class.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004223" name="i1004223"></a>
<h3 class="refsect3">Item [string]</h3>
<p>This property gets the .NET <code>Value</code> of the column specified by the column name.</p>
<a id="sthref1337" name="sthref1337"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override object this[string <span class="italic">columnName</span>] {get;}
</pre>
<a id="sthref1338" name="sthref1338"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">columnName</span></code></p>
<p>The name of the column.</p>
</li>
</ul>
<a id="sthref1339" name="sthref1339"></a>
<p class="subhead2">Property Value</p>
<p>The .NET <code>Value</code> of the specified column.</p>
<a id="sthref1340" name="sthref1340"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1341" name="sthref1341"></a>
<p class="subhead2">Remarks</p>
<p>Default = Not Applicable</p>
<p>A case-sensitive search is made to locate the specified column by its name. If this fails, then a case-insensitive search is made.</p>
<p>In C#, this property is the indexer for this class.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="BABEAIFD" name="BABEAIFD"></a>
<h3 class="refsect3">InitialLOBFetchSize</h3>
<p>This property specifies the amount that the <code>OracleDataReader</code> initially fetches for LOB columns.</p>
<a id="sthref1342" name="sthref1342"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public int InitialLOBFetchSize {get;}
</pre>
<a id="sthref1343" name="sthref1343"></a>
<p class="subhead2">Property Value</p>
<p>The size of the chunk to retrieve.</p>
<a id="sthref1344" name="sthref1344"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<a id="sthref1345" name="sthref1345"></a>
<p class="subhead2">Remarks</p>
<p>For Oracle Database 10<span class="italic">g</span> release 2 (10.2) and later, the maximum value supported for <code>InitialLOBFetchSize</code> is 2 GB.</p>
<p>For releases prior to Oracle Database 10<span class="italic">g</span> release 2 (10.2), the maximum value supported for <code>InitialLOBFetchSize</code> is 32K.</p>
<p>Default is the <code>OracleCommand.InitialLOBFetchSize</code>, from which this value is inherited.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="OracleCommandClass.htm#BABEGDHA">"InitialLOBFetchSize"</a> for further information on <code>OracleCommand.InitialLOBFetchSize</code></p>
</li>
<li>
<p><a href="featData.htm#BABFGDGJ">"Obtaining LOB Data"</a></p>
</li>
</ul>
</div>
<a id="i1004258" name="i1004258"></a>
<h3 class="refsect3">InitialLONGFetchSize</h3>
<p>This property specifies the amount that the <code>OracleDataReader</code> initially fetches for <code>LONG</code> and <code>LONG</code> <code>RAW</code> columns.</p>
<a id="sthref1346" name="sthref1346"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public long InitialLONGFetchSize {get;}
</pre>
<a id="sthref1347" name="sthref1347"></a>
<p class="subhead2">Property Value</p>
<p>The size of the chunk to retrieve. The default is <code>0</code>.</p>
<a id="sthref1348" name="sthref1348"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<a id="sthref1349" name="sthref1349"></a>
<p class="subhead2">Remarks</p>
<p>The maximum value supported for <code>InitialLONGFetchSize</code> is <code>32767</code>. If this property is set to a higher value, the provider resets it to <code>32767</code>.</p>
<p>Default is <code>OracleCommand.InitialLONGFetchSize</code>, from which this value is inherited.</p>
<p>This property is read-only for the <code>OracleDataReader</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="OracleCommandClass.htm#i997859">"InitialLONGFetchSize"</a> for further information on <code>OracleCommand.InitialLONGFetchSize</code></p>
</li>
<li>
<p><a href="featData.htm#i1007197">"Obtaining LONG and LONG RAW Data"</a></p>
</li>
</ul>
</div>
<a id="i1004297" name="i1004297"></a>
<h3 class="refsect3">RecordsAffected</h3>
<p>This property gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</p>
<a id="sthref1350" name="sthref1350"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public int RecordsAffected {get;}
</pre>
<a id="sthref1351" name="sthref1351"></a>
<p class="subhead2">Property Value</p>
<p>The number of rows affected by execution of the SQL statement.</p>
<a id="sthref1352" name="sthref1352"></a>
<p class="subhead2">Implements</p>
<p><code>IDataReader</code></p>
<a id="sthref1353" name="sthref1353"></a>
<p class="subhead2">Remarks</p>
<p>Default = <code>0</code></p>
<p>The value of <code>-1</code> is returned for <code>SELECT</code> statements.</p>
<p><code>IsClosed</code> and <code>RecordsAffected</code> are the only two properties that are accessible after the <code>OracleDataReader</code> is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="CHDJAAAB" name="CHDJAAAB"></a><a id="BABGFBBI" name="BABGFBBI"></a>
<h3 class="refsect3">RowSize</h3>
<p>This property gets the amount of memory the internal cache of the <code>OracleDataReader</code> needs to store one row of data.</p>
<a id="sthref1354" name="sthref1354"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public long RowSize {get;}
</pre>
<a id="sthref1355" name="sthref1355"></a>
<p class="subhead2">Property Value</p>
<p>A <code>long</code> that indicates the amount of memory (in bytes) that an <code>OracleDataReader</code> needs to store one row of data for the executed query.</p>
<a id="sthref1356" name="sthref1356"></a>
<p class="subhead2">Remarks</p>
<p>The <code>RowSize</code> property is set to a nonzero value when the <code>OracleDataReader</code> object is created. This property can be used at design time or dynamically during run time, to set the <code>FetchSize</code> property, based on the number of rows. For example, to enable the <code>OracleDataReader</code> object to fetch <code><span class="codeinlineitalic">N</span></code> rows for each database round-trip, the <code>OracleDataReader</code> <code>FetchSize</code> property can be set dynamically to <code>RowSize</code> <code>*</code> <code><span class="codeinlineitalic">N</span></code>. Note that for the <code>FetchSize</code> property to take effect appropriately, it must be set before the first invocation of <code>OracleDataReader.Read()</code> for the particular result set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#CHDHGEBF">"FetchSize"</a></p>
</li>
</ul>
</div>
<a id="CHDIEIHA" name="CHDIEIHA"></a><a id="CHDEDDCB" name="CHDEDDCB"></a>
<h3 class="refsect3">VisibleFieldCount</h3>
<p>This property gets the number of fields in the <code>OracleDataReader</code> that are not hidden.</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
<a id="sthref1357" name="sthref1357"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public override int VisibleFieldcount { get; }
</pre>
<a id="sthref1358" name="sthref1358"></a>
<p class="subhead2">Property Value</p>
<p>The number of fields that are not hidden.</p>
<a id="sthref1359" name="sthref1359"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<a id="sthref1360" name="sthref1360"></a>
<p class="subhead2">Remarks</p>
<p>If an application sets the <code>AddRowid</code> property on an <code>OracleCommand</code> object to <code>true</code>, then the application can access the <code>RowId</code> but it is not a visible field. If <code>RowId</code> is added in the select statement list, then it is a visible field. <code>OracleDataReader.VisibleFieldCount</code> and <code>OracleDataReader.FieldCount</code> always have the same value.</p>
<a id="sthref1361" name="sthref1361"></a>
<p class="subhead2">Example</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
 
using System;
using System.Data;
using System.Data.Common;
using Oracle.DataAccess.Client;
 
class VisibleFieldCountSample
{
  static void Main(string[] args)
  {
    string constr = "User Id=scott; Password=tiger; Data Source=oracle;";
    DbProviderFactory factory =
            DbProviderFactories.GetFactory("Oracle.DataAccess.Client");
 
    using (DbConnection conn = factory.CreateConnection())
    {
      conn.ConnectionString = constr;
      try
      {
        conn.Open();
        OracleCommand cmd = (OracleCommand)factory.CreateCommand();
        cmd.Connection = (OracleConnection)conn;
 
        //to gain access to ROWIDs of the table
        cmd.AddRowid = true;
        cmd.CommandText = "select empno, ename from emp;";
 
        OracleDataReader reader = cmd.ExecuteReader();
        
        int visFC = reader.VisibleFieldCount; //Results in 2
        int hidFC = reader.HiddenFieldCount;  // Results in 1
 
        Console.Write("Visible field count: " + visFC);
        Console.Write("Hidden field count: " + hidFC);
 
        reader.Dispose();
        cmd.Dispose();
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
        Console.WriteLine(ex.StackTrace);
      }
    }
  }
}
 
 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#CHDIEIHA">"VisibleFieldCount"</a></p>
</li>
<li>
<p><a href="#CHDIAHCA">"FieldCount"</a></p>
</li>
</ul>
</div>
<a id="i1004329" name="i1004329"></a>
<hr />
<h2 class="refsect2">OracleDataReader Public Methods<a id="sthref1362" name="sthref1362"></a></h2>
<p><code>OracleDataReader</code> public methods are listed in <a href="#g1101718">Table 5-48</a>.</p>
<div class="tblruleformal"><a id="sthref1363" name="sthref1363"></a><a id="g1101718" name="g1101718"></a>
<p class="titleintable">Table 5-48 OracleDataReader Public Methods</p>
<table class="RuleFormal" title="OracleDataReader Public Methods " summary="Rows are public methods. first column is name, second column is description" dir="ltr" border="1" width="100%" frame="border" rules="all" cellpadding="3" cellspacing="0">
<col width="36%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t227">Public Method</th>
<th align="left" valign="bottom" id="r1c2-t227">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t227" headers="r1c1-t227">
<p><a href="#i1004711">Close</a></p>
</td>
<td align="left" headers="r2c1-t227 r1c2-t227">
<p>Closes the <code>OracleDataReader</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t227" headers="r1c1-t227">
<p><code>CreateObjRef</code></p>
</td>
<td align="left" headers="r3c1-t227 r1c2-t227">
<p>Inherited from <code>System.MarshalByRefObject</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t227" headers="r1c1-t227">
<p><a href="#i1004747">Dispose</a></p>
</td>
<td align="left" headers="r4c1-t227 r1c2-t227">
<p>Releases any resources or memory allocated by the object</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t227" headers="r1c1-t227">
<p><code>Equals</code></p>
</td>
<td align="left" headers="r5c1-t227 r1c2-t227">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t227" headers="r1c1-t227">
<p><a href="#CHDGEBAJ">GetBoolean</a></p>
</td>
<td align="left" headers="r6c1-t227 r1c2-t227">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t227" headers="r1c1-t227">
<p><a href="#i1004775">GetByte</a></p>
</td>
<td align="left" headers="r7c1-t227 r1c2-t227">
<p>Returns the byte value of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t227" headers="r1c1-t227">
<p><a href="#i1004813">GetBytes</a></p>
</td>
<td align="left" headers="r8c1-t227 r1c2-t227">
<p>Populates the provided byte array with up to the maximum number of bytes, from the specified offset (in bytes) of the column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t227" headers="r1c1-t227">
<p><a href="#CHDGEBHJ">GetChar</a></p>
</td>
<td align="left" headers="r9c1-t227 r1c2-t227">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t227" headers="r1c1-t227">
<p><a href="#i1004859">GetChars</a></p>
</td>
<td align="left" headers="r10c1-t227 r1c2-t227">
<p>Populates the provided character array with up to the maximum number of characters, from the specified offset (in characters) of the column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t227" headers="r1c1-t227">
<p><code>GetData</code></p>
</td>
<td align="left" headers="r11c1-t227 r1c2-t227">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t227" headers="r1c1-t227">
<p><a href="#i1004907">GetDataTypeName</a></p>
</td>
<td align="left" headers="r12c1-t227 r1c2-t227">
<p>Returns the ODP.NET type name of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t227" headers="r1c1-t227">
<p><a href="#i1004947">GetDateTime</a></p>
</td>
<td align="left" headers="r13c1-t227 r1c2-t227">
<p>Returns the <code>DateTime</code> value of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t227" headers="r1c1-t227">
<p><a href="#i1004984">GetDecimal</a></p>
</td>
<td align="left" headers="r14c1-t227 r1c2-t227">
<p>Returns the <code>decimal</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r15c1-t227" headers="r1c1-t227">
<p><a href="#i1005021">GetDouble</a></p>
</td>
<td align="left" headers="r15c1-t227 r1c2-t227">
<p>Returns the <code>double</code> value of the specified <code>NUMBER</code> column or <code>BINARY_DOUBLE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r16c1-t227" headers="r1c1-t227">
<p><a href="#BABHCADG">GetEnumerator</a></p>
</td>
<td align="left" headers="r16c1-t227 r1c2-t227">
<p>Returns an <code>IEnumerator</code> that can be used to iterate through the collection</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r17c1-t227" headers="r1c1-t227">
<p><a href="#i1005058">GetFieldType</a></p>
</td>
<td align="left" headers="r17c1-t227 r1c2-t227">
<p>Returns the <code>Type</code> of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r18c1-t227" headers="r1c1-t227">
<p><a href="#i1005092">GetFloat</a></p>
</td>
<td align="left" headers="r18c1-t227 r1c2-t227">
<p>Returns the <code>float</code> value of the specified <code>NUMBER</code> column or <code>BINARY_FLOAT</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r19c1-t227" headers="r1c1-t227">
<p><a href="#CHDGJBHC">GetGuid</a></p>
</td>
<td align="left" headers="r19c1-t227 r1c2-t227">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r20c1-t227" headers="r1c1-t227">
<p><code>GetHashCode</code></p>
</td>
<td align="left" headers="r20c1-t227 r1c2-t227">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r21c1-t227" headers="r1c1-t227">
<p><a href="#i1005130">GetInt16</a></p>
</td>
<td align="left" headers="r21c1-t227 r1c2-t227">
<p>Returns the <code>Int16</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r22c1-t227" headers="r1c1-t227">
<p><a href="#i1005172">GetInt32</a></p>
</td>
<td align="left" headers="r22c1-t227 r1c2-t227">
<p>Returns the <code>Int32</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r23c1-t227" headers="r1c1-t227">
<p><a href="#i1005214">GetInt64</a></p>
</td>
<td align="left" headers="r23c1-t227 r1c2-t227">
<p>Returns the <code>Int64</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r24c1-t227" headers="r1c1-t227">
<p><code>GetLifetimeService</code></p>
</td>
<td align="left" headers="r24c1-t227 r1c2-t227">
<p>Inherited by System.<code>MarshalByRefObject</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r25c1-t227" headers="r1c1-t227">
<p><a href="#i1005256">GetName</a></p>
</td>
<td align="left" headers="r25c1-t227 r1c2-t227">
<p>Returns the name of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r26c1-t227" headers="r1c1-t227">
<p><a href="#i1005290">GetOracleBFile</a></p>
</td>
<td align="left" headers="r26c1-t227 r1c2-t227">
<p>Returns an <code>OracleBFile</code> object of the specified <code>BFILE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r27c1-t227" headers="r1c1-t227">
<p><a href="#i1005325">GetOracleBinary</a></p>
</td>
<td align="left" headers="r27c1-t227 r1c2-t227">
<p>Returns an <code>OracleBinary</code> structure of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r28c1-t227" headers="r1c1-t227">
<p><a href="#i1005365">GetOracleBlob</a></p>
</td>
<td align="left" headers="r28c1-t227 r1c2-t227">
<p>Returns an <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r29c1-t227" headers="r1c1-t227">
<p><a href="#i1005400">GetOracleBlobForUpdate</a></p>
</td>
<td align="left" headers="r29c1-t227 r1c2-t227">
<p>Returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r30c1-t227" headers="r1c1-t227">
<p><a href="#i1005577">GetOracleClob</a></p>
</td>
<td align="left" headers="r30c1-t227 r1c2-t227">
<p>Returns an <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r31c1-t227" headers="r1c1-t227">
<p><a href="#i1005619">GetOracleClobForUpdate</a></p>
</td>
<td align="left" headers="r31c1-t227 r1c2-t227">
<p>Returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r32c1-t227" headers="r1c1-t227">
<p><a href="#i1005795">GetOracleDate</a></p>
</td>
<td align="left" headers="r32c1-t227 r1c2-t227">
<p>Returns an <code>OracleDate</code> structure of the specified <code>DATE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r33c1-t227" headers="r1c1-t227">
<p><a href="#i1005837">GetOracleDecimal</a></p>
</td>
<td align="left" headers="r33c1-t227 r1c2-t227">
<p>Returns an <code>OracleDecimal</code> structure of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r34c1-t227" headers="r1c1-t227">
<p><a href="#i1005872">GetOracleIntervalDS</a></p>
</td>
<td align="left" headers="r34c1-t227 r1c2-t227">
<p>Returns an <code>OracleIntervalDS</code> structure of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r35c1-t227" headers="r1c1-t227">
<p><a href="#i1005907">GetOracleIntervalYM</a></p>
</td>
<td align="left" headers="r35c1-t227 r1c2-t227">
<p>Returns an <code>OracleIntervalYM</code> structure of the specified <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r36c1-t227" headers="r1c1-t227">
<p><a href="#BABFEHBI">GetOracleRef</a></p>
</td>
<td align="left" headers="r36c1-t227 r1c2-t227">
<p>Returns an <code>OracleRef</code> object of the specified <code>REF</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r37c1-t227" headers="r1c1-t227">
<p><a href="#i1005942">GetOracleString</a></p>
</td>
<td align="left" headers="r37c1-t227 r1c2-t227">
<p>Returns an <code>OracleString</code> structure of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r38c1-t227" headers="r1c1-t227">
<p><a href="#i1005989">GetOracleTimeStamp</a></p>
</td>
<td align="left" headers="r38c1-t227 r1c2-t227">
<p>Returns an <code>OracleTimeStamp</code> structure of the Oracle <code>TimeStamp</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r39c1-t227" headers="r1c1-t227">
<p><a href="#i1006025">GetOracleTimeStampLTZ</a></p>
</td>
<td align="left" headers="r39c1-t227 r1c2-t227">
<p>Returns an <code>OracleTimeStampLTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r40c1-t227" headers="r1c1-t227">
<p><a href="#i1006061">GetOracleTimeStampTZ</a></p>
</td>
<td align="left" headers="r40c1-t227 r1c2-t227">
<p>Returns an <code>OracleTimeStampTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r41c1-t227" headers="r1c1-t227">
<p><a href="#i1021203">GetOracleXmlType</a></p>
</td>
<td align="left" headers="r41c1-t227 r1c2-t227">
<p>Returns an <code>OracleXmlType</code> object of the specified <code>XMLType</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r42c1-t227" headers="r1c1-t227">
<p><a href="#i1006136">GetOracleValue</a></p>
</td>
<td align="left" headers="r42c1-t227 r1c2-t227">
<p>Returns the specified column value as a ODP.NET type</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r43c1-t227" headers="r1c1-t227">
<p><a href="#i1006175">GetOracleValues</a></p>
</td>
<td align="left" headers="r43c1-t227 r1c2-t227">
<p>Gets all the column values as ODP.NET types</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r44c1-t227" headers="r1c1-t227">
<p><a href="#i1006226">GetOrdinal</a></p>
</td>
<td align="left" headers="r44c1-t227 r1c2-t227">
<p>Returns the <code>0</code>-based ordinal (or index) of the specified column name</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r45c1-t227" headers="r1c1-t227">
<p><a href="#CHDGBEAA">GetProviderSpecificFieldType</a></p>
</td>
<td align="left" headers="r45c1-t227 r1c2-t227">
<p>Returns the provider-specific type of the specified column</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r46c1-t227" headers="r1c1-t227">
<p><a href="#CHDIIBDH">GetProviderSpecificValue</a></p>
</td>
<td align="left" headers="r46c1-t227 r1c2-t227">
<p>Returns an object that represents the underlying provider-specific value of the specified ordinal</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r47c1-t227" headers="r1c1-t227">
<p><a href="#CHDEECDJ">GetProviderSpecificValues</a></p>
</td>
<td align="left" headers="r47c1-t227 r1c2-t227">
<p>Returns an array of objects that represent the underlying provider-specific values</p>
<p><span class="italic">Supported Only in ADO.NET 2.0-Compliant ODP.NET</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r48c1-t227" headers="r1c1-t227">
<p><a href="#i1006262">GetSchemaTable</a></p>
</td>
<td align="left" headers="r48c1-t227 r1c2-t227">
<p>Returns a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r49c1-t227" headers="r1c1-t227">
<p><a href="#i1006481">GetString</a></p>
</td>
<td align="left" headers="r49c1-t227 r1c2-t227">
<p>Returns the string value of the specified column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r50c1-t227" headers="r1c1-t227">
<p><a href="#i1006518">GetTimeSpan</a></p>
</td>
<td align="left" headers="r50c1-t227 r1c2-t227">
<p>Returns the <code>TimeSpan</code> value of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r51c1-t227" headers="r1c1-t227">
<p><code>GetType</code></p>
</td>
<td align="left" headers="r51c1-t227 r1c2-t227">
<p>Inherited from <code>System.Object</code> class</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r52c1-t227" headers="r1c1-t227">
<p><a href="#i1006555">GetValue</a></p>
</td>
<td align="left" headers="r52c1-t227 r1c2-t227">
<p>Returns the column value as a .NET type</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r53c1-t227" headers="r1c1-t227">
<p><a href="#i1006589">GetValues</a></p>
</td>
<td align="left" headers="r53c1-t227 r1c2-t227">
<p>Gets all the column values as .NET types</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r54c1-t227" headers="r1c1-t227">
<p><a href="#i1006627">GetXmlReader</a></p>
</td>
<td align="left" headers="r54c1-t227 r1c2-t227">
<p>Returns the value of an <code>XMLType</code> column as an instance of an .NET <code>XmlTextReader</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r55c1-t227" headers="r1c1-t227">
<p><a href="#i1006661">IsDBNull</a></p>
</td>
<td align="left" headers="r55c1-t227 r1c2-t227">
<p>Indicates whether or not the column value is null</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r56c1-t227" headers="r1c1-t227">
<p><a href="#i1006705">NextResult</a></p>
</td>
<td align="left" headers="r56c1-t227 r1c2-t227">
<p>Advances the data reader to the next result set when reading the results</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r57c1-t227" headers="r1c1-t227">
<p><a href="#i1006737">Read</a></p>
</td>
<td align="left" headers="r57c1-t227 r1c2-t227">
<p>Reads the next row in the result set</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r58c1-t227" headers="r1c1-t227">
<p><code>ToString</code></p>
</td>
<td align="left" headers="r58c1-t227 r1c2-t227">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004711" name="i1004711"></a>
<h3 class="refsect3">Close</h3>
<p>This method closes the <code>OracleDataReader</code>.</p>
<a id="sthref1364" name="sthref1364"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override void Close();
</pre>
<a id="sthref1365" name="sthref1365"></a>
<p class="subhead2">Implements</p>
<p><code>IDataReader</code></p>
<a id="sthref1366" name="sthref1366"></a>
<p class="subhead2">Remarks</p>
<p>The <code>Close</code> method frees all resources associated with the <code>OracleDataReader</code>.</p>
<a id="sthref1367" name="sthref1367"></a>
<p class="subhead2">Example</p>
<p>The code example for the <code>OracleDataReader</code> class includes the <code>Close</code> method. See <code>OracleDataReader</code> Overview <a href="#i1003289">"Example"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004747" name="i1004747"></a>
<h3 class="refsect3">Dispose</h3>
<p>This method releases any resources or memory allocated by the object.</p>
<a id="sthref1368" name="sthref1368"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public void Dispose();
</pre>
<a id="sthref1369" name="sthref1369"></a>
<p class="subhead2">Implements</p>
<p><code>IDisposable</code></p>
<a id="sthref1370" name="sthref1370"></a>
<p class="subhead2">Remarks</p>
<p>The <code>Dispose</code> method also closes the <code>OracleDataReader</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="CHDGEBAJ" name="CHDGEBAJ"></a>
<h3 class="refsect3">GetBoolean</h3>
<p>This method is not supported.</p>
<a id="sthref1371" name="sthref1371"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override bool GetBoolean(int <span class="italic">index</span>);
</pre>
<a id="sthref1372" name="sthref1372"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1373" name="sthref1373"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1374" name="sthref1374"></a>
<p class="subhead2">Exceptions</p>
<p><code>NotSupportedException</code> - This property is not supported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004775" name="i1004775"></a>
<h3 class="refsect3">GetByte</h3>
<p>This method returns the byte value of the specified column.</p>
<a id="sthref1375" name="sthref1375"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override byte GetByte(int <span class="italic">index</span>);
</pre>
<a id="sthref1376" name="sthref1376"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1377" name="sthref1377"></a>
<p class="subhead2">Return Value</p>
<p>The value of the column as a byte.</p>
<a id="sthref1378" name="sthref1378"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1379" name="sthref1379"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1380" name="sthref1380"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004813" name="i1004813"></a>
<h3 class="refsect3">GetBytes</h3>
<p>This method populates the provided byte array with up to the maximum number of bytes, from the specified offset (in bytes) of the column.</p>
<a id="sthref1381" name="sthref1381"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override long GetBytes(int index, long fieldOffset, byte[] buffer, 
   int bufferOffset, int length);
</pre>
<a id="sthref1382" name="sthref1382"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">fieldOffset</span></code></p>
<p>The offset within the column from which reading begins (in bytes).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">buffer</span></code></p>
<p>The byte array that the data is read into.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">bufferOffset</span></code></p>
<p>The offset within the buffer to begin reading data into (in bytes).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">length</span></code></p>
<p>The maximum number of bytes to read (in bytes).</p>
</li>
</ul>
<a id="sthref1383" name="sthref1383"></a>
<p class="subhead2">Return Value</p>
<p>The number of bytes read.</p>
<a id="sthref1384" name="sthref1384"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1385" name="sthref1385"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1386" name="sthref1386"></a>
<p class="subhead2">Remarks</p>
<p>This method returns the number of bytes read into the buffer. This may be less than the actual length of the field if the method has been called previously for the same column.</p>
<p>If a null reference is passed for buffer, the length of the field in bytes is returned.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="CHDGEBHJ" name="CHDGEBHJ"></a>
<h3 class="refsect3">GetChar</h3>
<p>This method is not supported.</p>
<a id="sthref1387" name="sthref1387"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override long GetChar(int <span class="italic">index</span>);
</pre>
<a id="sthref1388" name="sthref1388"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero based column index.</p>
</li>
</ul>
<a id="sthref1389" name="sthref1389"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1390" name="sthref1390"></a>
<p class="subhead2">Exceptions</p>
<p><code>NotSupportedException</code> - This property is not supported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004859" name="i1004859"></a>
<h3 class="refsect3">GetChars</h3>
<p>This method populates the provided character array with up to the maximum number of characters, from the specified offset (in characters) of the column.</p>
<a id="sthref1391" name="sthref1391"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override long GetChars(int <span class="italic">index</span>, long <span class="italic">fieldOffset</span>, char[] <span class="italic">buffer</span>,
    int <span class="italic">bufferOffset</span>, int <span class="italic">length</span>);
</pre>
<a id="sthref1392" name="sthref1392"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">fieldOffset</span></code></p>
<p>The index within the column from which to begin reading (in characters).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">buffer</span></code></p>
<p>The character array that the data is read into.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">bufferOffset</span></code></p>
<p>The index within the buffer to begin reading data into (in characters).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">length</span></code></p>
<p>The maximum number of characters to read (in characters).</p>
</li>
</ul>
<a id="sthref1393" name="sthref1393"></a>
<p class="subhead2">Return Value</p>
<p>The number of characters read.</p>
<a id="sthref1394" name="sthref1394"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1395" name="sthref1395"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1396" name="sthref1396"></a>
<p class="subhead2">Remarks</p>
<p>This method returns the number of characters read into the buffer. This may be less than the actual length of the field, if the method has been called previously for the same column.</p>
<p>If a null reference is passed for buffer, the length of the field in characters is returned.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004907" name="i1004907"></a>
<h3 class="refsect3">GetDataTypeName</h3>
<p>This method returns the ODP.NET type name of the specified column.</p>
<a id="sthref1397" name="sthref1397"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override string GetDataTypeName(int <span class="italic">index</span>);
</pre>
<a id="sthref1398" name="sthref1398"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1399" name="sthref1399"></a>
<p class="subhead2">Return Value</p>
<p>The name of the ODP.NET type of the column.</p>
<a id="sthref1400" name="sthref1400"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1401" name="sthref1401"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004947" name="i1004947"></a>
<h3 class="refsect3">GetDateTime</h3>
<p>This method returns the <code>DateTime</code> value of the specified column.</p>
<a id="sthref1402" name="sthref1402"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override DateTime GetDateTime(int <span class="italic">index</span>);
</pre>
<a id="sthref1403" name="sthref1403"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1404" name="sthref1404"></a>
<p class="subhead2">Return Value</p>
<p>The <code>DateTime</code> value of the column.</p>
<a id="sthref1405" name="sthref1405"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1406" name="sthref1406"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1407" name="sthref1407"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1004984" name="i1004984"></a>
<h3 class="refsect3">GetDecimal</h3>
<p>This method returns the <code>decimal</code> value of the specified <code>NUMBER</code> column.</p>
<a id="sthref1408" name="sthref1408"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override decimal GetDecimal(int <span class="italic">index</span>);
</pre>
<a id="sthref1409" name="sthref1409"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1410" name="sthref1410"></a>
<p class="subhead2">Return Value</p>
<p>The <code>decimal</code> value of the column.</p>
<a id="sthref1411" name="sthref1411"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1412" name="sthref1412"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1413" name="sthref1413"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005021" name="i1005021"></a>
<h3 class="refsect3">GetDouble</h3>
<p>This method returns the <code>double</code> value of the specified <code>NUMBER</code> column or <code>BINARY_DOUBLE</code> column.</p>
<a id="sthref1414" name="sthref1414"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override double GetDouble(int <span class="italic">index</span>);
</pre>
<a id="sthref1415" name="sthref1415"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1416" name="sthref1416"></a>
<p class="subhead2">Return Value</p>
<p>The <code>double</code> value of the column.</p>
<a id="sthref1417" name="sthref1417"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1418" name="sthref1418"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1419" name="sthref1419"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p>Starting with Oracle Database 10<span class="italic">g</span>, <code>GetDouble</code> now supports retrieval of data from <code>BINARY_DOUBLE</code> columns.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="BABHCADG" name="BABHCADG"></a>
<h3 class="refsect3">GetEnumerator</h3>
<p>This method returns an <code>IEnumerator</code> that can be used to iterate through the collection (record set).</p>
<a id="sthref1420" name="sthref1420"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override IEnumerator GetEnumerator();
</pre>
<a id="sthref1421" name="sthref1421"></a>
<p class="subhead2">Return Value</p>
<p>An <code>IEnumerator</code> that can be used to iterate through the collection (record set).</p>
<a id="sthref1422" name="sthref1422"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005058" name="i1005058"></a>
<h3 class="refsect3">GetFieldType</h3>
<p>This method returns the <code>type</code> of the specified column.</p>
<a id="sthref1423" name="sthref1423"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override Type GetFieldType(int <span class="italic">index</span>);
</pre>
<a id="sthref1424" name="sthref1424"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1425" name="sthref1425"></a>
<p class="subhead2">Return Value</p>
<p>The <code>type</code> of the default .NET type of the column.</p>
<a id="sthref1426" name="sthref1426"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="DAFIBCFD" name="DAFIBCFD"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed, or the specified column is a UDT but no registered custom type mapping exists for the UDT.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<a id="sthref1427" name="sthref1427"></a>
<p class="subhead2">Remarks</p>
<p><code>GetFieldType</code> returns a type that corresponds to the value that the application obtains after invoking the <code>GetValue</code> accessor or <code>Item</code> property on the <code>OracleDataReader</code>. For example, if the column is a string, this method returns a .NET Type object for a .NET string.</p>
<p>If the attribute is a UDT, this method may return either of the following:</p>
<ul>
<li>
<p>A .NET Type of the custom type if a custom type mapping exists for the Oracle object or collection.</p>
</li>
<li>
<p>A .NET Type of string if the column is an Oracle <code>REF</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005092" name="i1005092"></a>
<h3 class="refsect3">GetFloat</h3>
<p>This method returns the <code>float</code> value of the specified <code>NUMBER</code> column or <code>BINARY_FLOAT</code> column.</p>
<a id="sthref1428" name="sthref1428"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override float GetFloat(int <span class="italic">index</span>);
</pre>
<a id="sthref1429" name="sthref1429"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1430" name="sthref1430"></a>
<p class="subhead2">Return Value</p>
<p>The <code>float</code> value of the column.</p>
<a id="sthref1431" name="sthref1431"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1432" name="sthref1432"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1433" name="sthref1433"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p>Starting with Oracle Database 10<span class="italic">g</span>, <code>GetFloat</code> now supports retrieval of data from <code>BINARY_FLOAT</code> columns.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="CHDGJBHC" name="CHDGJBHC"></a>
<h3 class="refsect3">GetGuid</h3>
<p>This method is not supported.</p>
<a id="sthref1434" name="sthref1434"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override Guid GetGuid(int <span class="italic">index</span>);
</pre>
<a id="sthref1435" name="sthref1435"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1436" name="sthref1436"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1437" name="sthref1437"></a>
<p class="subhead2">Exceptions</p>
<p><code>NotSupportedException</code> - This property is not supported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005130" name="i1005130"></a>
<h3 class="refsect3">GetInt16</h3>
<p>This method returns the <code>Int16</code> value of the specified <code>NUMBER</code> column.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
<code>short</code> is equivalent to <code>Int16</code>.</div>
<a id="sthref1438" name="sthref1438"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override short GetInt16(int <span class="italic">index</span>);
</pre>
<a id="sthref1439" name="sthref1439"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1440" name="sthref1440"></a>
<p class="subhead2">Return Value</p>
<p>The <code>Int16</code> value of the column.</p>
<a id="sthref1441" name="sthref1441"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1442" name="sthref1442"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1443" name="sthref1443"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005172" name="i1005172"></a>
<h3 class="refsect3">GetInt32</h3>
<p>This method returns the <code>Int32</code> value of the specified <code>NUMBER</code> column.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
<code>int</code> is equivalent to <code>Int32</code>.</div>
<a id="sthref1444" name="sthref1444"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override int GetInt32(int <span class="italic">index</span>);
</pre>
<a id="sthref1445" name="sthref1445"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1446" name="sthref1446"></a>
<p class="subhead2">Return Value</p>
<p>The <code>Int32</code> value of the column.</p>
<a id="sthref1447" name="sthref1447"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1448" name="sthref1448"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1449" name="sthref1449"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005214" name="i1005214"></a>
<h3 class="refsect3">GetInt64</h3>
<p>This method returns the <code>Int64</code> value of the specified <code>NUMBER</code> column.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
<code>long</code> is equivalent to <code>Int64</code>.</div>
<a id="sthref1450" name="sthref1450"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override long GetInt64(int <span class="italic">index</span>);
</pre>
<a id="sthref1451" name="sthref1451"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1452" name="sthref1452"></a>
<p class="subhead2">Return Value</p>
<p>The <code>Int64</code> value of the column.</p>
<a id="sthref1453" name="sthref1453"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1454" name="sthref1454"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1455" name="sthref1455"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005256" name="i1005256"></a>
<h3 class="refsect3">GetName</h3>
<p>This method returns the name of the specified column.</p>
<a id="sthref1456" name="sthref1456"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override string GetName(int <span class="italic">index</span>);
</pre>
<a id="sthref1457" name="sthref1457"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1458" name="sthref1458"></a>
<p class="subhead2">Return Value</p>
<p>The name of the column.</p>
<a id="sthref1459" name="sthref1459"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1460" name="sthref1460"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005290" name="i1005290"></a>
<h3 class="refsect3">GetOracleBFile</h3>
<p>This method returns an <code>OracleBFile</code> object of the specified <code>BFILE</code> column.</p>
<a id="sthref1461" name="sthref1461"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleBFile GetOracleBFile(int <span class="italic">index</span>);
</pre>
<a id="sthref1462" name="sthref1462"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1463" name="sthref1463"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleBFile</code> value of the column.</p>
<a id="sthref1464" name="sthref1464"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1465" name="sthref1465"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005325" name="i1005325"></a>
<h3 class="refsect3">GetOracleBinary</h3>
<p>This method returns an <code>OracleBinary</code> structure of the specified column.</p>
<a id="sthref1466" name="sthref1466"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleBinary GetOracleBinary(int <span class="italic">index</span>);
</pre>
<a id="sthref1467" name="sthref1467"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1468" name="sthref1468"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleBinary</code> value of the column.</p>
<a id="sthref1469" name="sthref1469"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1470" name="sthref1470"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p><code>GetOracleBinary</code> is used on the following Oracle types:</p>
<ul>
<li>
<p><code>BFILE</code></p>
</li>
<li>
<p><code>BLOB</code></p>
</li>
<li>
<p><code>LONG</code> <code>RAW</code></p>
</li>
<li>
<p><code>RAW</code></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005365" name="i1005365"></a>
<h3 class="refsect3">GetOracleBlob</h3>
<p>This method returns an <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
<a id="sthref1471" name="sthref1471"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleBlob GetOracleBlob(int <span class="italic">index</span>);
</pre>
<a id="sthref1472" name="sthref1472"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1473" name="sthref1473"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleBlob</code> value of the column.</p>
<a id="sthref1474" name="sthref1474"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1475" name="sthref1475"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005400" name="i1005400"></a>
<h3 class="refsect3">GetOracleBlobForUpdate</h3>
<p><code>GetOracleBlobForUpdate</code> returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
<a id="sthref1476" name="sthref1476"></a>
<p class="subhead2">Overload List:</p>
<ul>
<li>
<p><a href="#i1005415">GetOracleBlobForUpdate(int)</a></p>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
</li>
<li>
<p><a href="#i1005507">GetOracleBlobForUpdate(int, int)</a></p>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column using a <code>WAIT</code> clause.</p>
</li>
</ul>
<a id="i1005415" name="i1005415"></a>
<h3 class="refsect3">GetOracleBlobForUpdate(int)</h3>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
<a id="sthref1477" name="sthref1477"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleBlob GetOracleBlobForUpdate(int <span class="italic">index</span>);
</pre>
<a id="sthref1478" name="sthref1478"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1479" name="sthref1479"></a>
<p class="subhead2">Return Value</p>
<p>An updatable <code>OracleBlob</code> object.</p>
<a id="sthref1480" name="sthref1480"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1481" name="sthref1481"></a>
<p class="subhead2">Remarks</p>
<p>When the <code>OracleCommand</code>'s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleBlobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>BLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleBlob</code> obtained from <code>GetOracleBlob()</code> can have a different value than the <code>OracleBlob</code> obtained from <code>GetOracleBlobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p>The returned <code>OracleBlob</code> object can be used to safely update the <code>BLOB</code> because the <code>BLOB</code> column has been locked after a call to this method.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR UPDATE</code> statement without a <code>WAIT</code> clause. Therefore, the statement can wait indefinitely until a lock is acquired for that row.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<a id="i1005436" name="i1005436"></a>
<p class="subhead2">Example</p>
<p>The following example gets the <code>OracleBlob</code> object for update from the reader, updates the <code>OracleBlob</code> object, and then commits the transaction.</p>
<pre xml:space="preserve" class="oac_no_warn">/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,'KING','SOFTWARE ENGR', '5657');
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,'SCOTT','MANAGER', '5960');
commit;
 
*/
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
using Oracle.DataAccess.Types;
 
class GetOracleBlobForUpdateSample
{
  static void Main()
  {
    string constr = "User Id=scott;Password=tiger;Data Source=oracle";
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    // Get the ByteCodes for empno = 1
    string cmdstr = "SELECT BYTECODES, EMPNO FROM EMPINFO where EMPNO = 1";
    OracleCommand cmd = new OracleCommand(cmdstr, con);
 
    // Since we are going to update the OracleBlob object, we will
    //have to create a transaction
    OracleTransaction txn = con.BeginTransaction();
 
    // Get the reader
    OracleDataReader reader = cmd.ExecuteReader();
 
    // Declare the variables to retrieve the data in EmpInfo
    OracleBlob byteCodesBlob;
 
    // Read the first row
    reader.Read();
    if (!reader.IsDBNull(0))
    {
      byteCodesBlob = reader.GetOracleBlobForUpdate(0);
 
      // Close the reader
      reader.Close();
 
      // Update the ByteCodes object
      byte[] addedBytes = new byte[2] {0, 0};
      byteCodesBlob.Append(addedBytes, 0, addedBytes.Length);
 
      // Now commit the transaction
      txn.Commit();
      Console.WriteLine("Blob Column successfully updated");
    }
    else
      reader.Dispose();
 
    // Close the connection
    con.Dispose();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">"LOB Support"</a></p>
</li>
</ul>
</div>
<a id="i1005507" name="i1005507"></a>
<h3 class="refsect3">GetOracleBlobForUpdate(int, int)</h3>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column using a <code>WAIT</code> clause.</p>
<a id="sthref1482" name="sthref1482"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleBlob GetOracleBlobForUpdate(int <span class="italic">index</span>, int <span class="italic">wait</span>);
</pre>
<a id="sthref1483" name="sthref1483"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">wait</span></code></p>
<p>The number of seconds the method waits to acquire a lock.</p>
</li>
</ul>
<a id="sthref1484" name="sthref1484"></a>
<p class="subhead2">Return Value</p>
<p>An updatable <code>OracleBlob</code> object.</p>
<a id="sthref1485" name="sthref1485"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1486" name="sthref1486"></a>
<p class="subhead2">Remarks</p>
<p>When the <code>OracleCommand</code>'s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleBlobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>BLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleBlob</code> obtained from <code>GetOracleBlob()</code> can have a different value than the <code>OracleBlob</code> obtained from <code>GetOracleBlobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p>The returned <code>OracleBlob</code> object can be used to safely update the <code>BLOB</code> because the <code>BLOB</code> column has been locked after a call to this method.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR UPDATE</code> statement which locks the row.</p>
<p>Different <code>WAIT</code> clauses are appended to the statement, depending on the <code><span class="codeinlineitalic">wait</span></code> value. If the <code><span class="codeinlineitalic">wait</span></code> value is:</p>
<ul>
<li>
<p><code>0</code></p>
<p>"<code>NOWAIT</code>" is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement. The statement executes immediately whether the lock is acquired or not. If the lock is not acquired, an exception is thrown.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">n</span></code></p>
<p>"<code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>" is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement. The statement executes as soon as the lock is acquired. However, if the lock cannot be acquired by <code><span class="codeinlineitalic">n</span></code> seconds, this method call throws an exception.</p>
<p>The <code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>" feature is only available for Oracle9<span class="italic">i</span> or later. For any version lower than Oracle9<span class="italic">i</span>, <code><span class="codeinlineitalic">n</span></code> is implicitly treated as <code>-1</code> and nothing is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement.</p>
</li>
<li>
<p><code>-1</code></p>
<p>Nothing is appended at the end of the <code>SELECT..FOR</code> <code>UPDATE</code>. The statement execution waits indefinitely until a lock can be acquired.</p>
</li>
</ul>
<a id="sthref1487" name="sthref1487"></a>
<p class="subhead2">Example</p>
<p>The <code>GetOracleBlobForUpdate</code> methods are comparable. See <a href="#i1005436">"Example"</a> for a code example demonstrating usage.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">"LOB Support"</a></p>
</li>
</ul>
</div>
<a id="i1005577" name="i1005577"></a>
<h3 class="refsect3">GetOracleClob</h3>
<p>This method returns an OracleClob object of the specified CLOB column.</p>
<a id="sthref1488" name="sthref1488"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleClob GetOracleClob(int <span class="italic">index</span>);
</pre>
<a id="sthref1489" name="sthref1489"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1490" name="sthref1490"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleClob</code> value of the column.</p>
<a id="sthref1491" name="sthref1491"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1492" name="sthref1492"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">"LOB Support"</a></p>
</li>
</ul>
</div>
<a id="i1005619" name="i1005619"></a>
<h3 class="refsect3">GetOracleClobForUpdate</h3>
<p><code>GetOracleClobForUpdate</code> returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column.</p>
<a id="sthref1493" name="sthref1493"></a>
<p class="subhead2">Overload List:</p>
<ul>
<li>
<p><a href="#i1005634">GetOracleClobForUpdate(int)</a></p>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column.</p>
</li>
<li>
<p><a href="#i1005726">GetOracleClobForUpdate(int, int)</a></p>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column using a <code>WAIT</code> clause.</p>
</li>
</ul>
<a id="i1005634" name="i1005634"></a>
<h3 class="refsect3">GetOracleClobForUpdate(int)</h3>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column.</p>
<a id="sthref1494" name="sthref1494"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleClob GetOracleClobForUpdate(int <span class="italic">index</span>);
</pre>
<a id="sthref1495" name="sthref1495"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1496" name="sthref1496"></a>
<p class="subhead2">Return Value</p>
<p>An updatable <code>OracleClob</code>.</p>
<a id="sthref1497" name="sthref1497"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1498" name="sthref1498"></a>
<p class="subhead2">Remarks</p>
<p>When the <code>OracleCommand</code>'s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleClobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>CLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleClob</code> obtained from <code>GetOracleClob()</code> can have a different value than the <code>OracleClob</code> obtained from <code>GetOracleClobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p>The returned <code>OracleClob</code> object can be used to safely update the <code>CLOB</code> because the <code>CLOB</code> column is locked after a call to this method.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR</code> <code>UPDATE</code> statement without a <code>WAIT</code> clause. Therefore, the statement can wait indefinitely until a lock is acquired for that row.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<a id="i1005655" name="i1005655"></a>
<p class="subhead2">Example</p>
<p>The following example gets the <code>OracleClob</code> object for update from the reader, updates the <code>OracleClob</code> object, and then commits the transaction.</p>
<pre xml:space="preserve" class="oac_no_warn">/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,'KING','SOFTWARE ENGR', '5657');
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,'SCOTT','MANAGER', '5960');
commit;
 
*/
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
using Oracle.DataAccess.Types;
 
class GetOracleClobForUpdateSample
{
  static void Main()
  {
    string constr = "User Id=scott;Password=tiger;Data Source=oracle";
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    // Get the job description for empno = 1
    string cmdStr = "SELECT JOBDESCRIPTION, EMPNO FROM EMPINFO where EMPNO = 1";
    OracleCommand cmd = new OracleCommand(cmdStr, con);
 
    // Since we are going to update the OracleClob object, we will
    //  have to create a transaction
    OracleTransaction txn = con.BeginTransaction();
 
    // Get the reader
    OracleDataReader reader = cmd.ExecuteReader();
 
    // Declare the variables to retrieve the data in EmpInfo
    OracleClob jobDescClob;
 
    // Read the first row
    reader.Read();
 
    if (!reader.IsDBNull(0))
    {
      jobDescClob = reader.GetOracleClobForUpdate(0);
 
      // Close the reader
      reader.Close();
 
      // Update the job description Clob object
      char[] jobDesc = "-SALES".ToCharArray();
      jobDescClob.Append(jobDesc, 0, jobDesc.Length);
 
      // Now commit the transaction
      txn.Commit();
      Console.WriteLine("Clob Column successfully updated");
    }
    else
      reader.Close();
 
    // Close the connection
    con.Close();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">"LOB Support"</a></p>
</li>
</ul>
</div>
<a id="i1005726" name="i1005726"></a>
<h3 class="refsect3">GetOracleClobForUpdate(int, int)</h3>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column using a <code>WAIT</code> clause.</p>
<a id="sthref1499" name="sthref1499"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleClob GetOracleClobForUpdate(int <span class="italic">index, </span>int<span class="italic"> wait</span>);
</pre>
<a id="sthref1500" name="sthref1500"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">wait</span></code></p>
<p>The number of seconds the method waits to acquire a lock.</p>
</li>
</ul>
<a id="sthref1501" name="sthref1501"></a>
<p class="subhead2">Return Value</p>
<p>An updatable <code>OracleClob</code>.</p>
<a id="sthref1502" name="sthref1502"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1503" name="sthref1503"></a>
<p class="subhead2">Remarks</p>
<p>When the <code>OracleCommand</code>'s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleClobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>CLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleClob</code> obtained from <code>GetOracleClob()</code> can have a different value than the <code>OracleClob</code> obtained from <code>GetOracleClobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR UPDATE</code> statement which locks the row.</p>
<p>The returned <code>OracleClob</code> object can be used to safely update the <code>CLOB</code> because the <code>CLOB</code> column is locked after a call to this method.</p>
<p>Different <code>WAIT</code> clauses are appended to the statement, depending on the <code><span class="codeinlineitalic">wait</span></code> value. If the <code><span class="codeinlineitalic">wait</span></code> value is:</p>
<ul>
<li>
<p><code>0</code></p>
<p>"<code>NOWAIT</code>" is appended at the end of a <code>SELECT..FOR UPDATE</code> statement. The statement executes immediately whether the lock is acquired or not. If the lock is not acquired, an exception is thrown.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">n</span></code></p>
<p>"<code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>" is appended at the end of a <code>SELECT..FOR UPDATE</code> statement. The statement executes as soon as the lock is acquired. However, if the lock cannot be acquired by <code><span class="codeinlineitalic">n</span></code> seconds, this method call throws an exception.</p>
<p>The <code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>" feature is only available for Oracle9<span class="italic">i</span> or later. For any version lower than Oracle9<span class="italic">i</span>, <code><span class="codeinlineitalic">n</span></code> is implicitly treated as <code>-1</code> and nothing is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement.</p>
</li>
<li>
<p><code>-1</code></p>
<p>Nothing is appended at the end of the <code>SELECT..FOR UPDATE</code>. The statement execution waits indefinitely until a lock can be acquired.</p>
</li>
</ul>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<a id="sthref1504" name="sthref1504"></a>
<p class="subhead2">Example</p>
<p>The GetOracleClobForUpdate methods are comparable. See <a href="#i1005655">"Example"</a> for a code example demonstrating usage.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">"LOB Support"</a></p>
</li>
</ul>
</div>
<a id="i1005795" name="i1005795"></a>
<h3 class="refsect3">GetOracleDate</h3>
<p>This method returns an OracleDate structure of the specified DATE column.</p>
<a id="sthref1505" name="sthref1505"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleDate GetOracleDate(int <span class="italic">index</span>);
</pre>
<a id="sthref1506" name="sthref1506"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1507" name="sthref1507"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleDate</code> value of the column.</p>
<a id="sthref1508" name="sthref1508"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1509" name="sthref1509"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">"LOB Support"</a></p>
</li>
</ul>
</div>
<a id="i1005837" name="i1005837"></a>
<h3 class="refsect3">GetOracleDecimal</h3>
<p>This method returns an <code>OracleDecimal</code> structure of the specified <code>NUMBER</code> column.</p>
<a id="sthref1510" name="sthref1510"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleDecimal GetOracleDecimal(int <span class="italic">index</span>);
</pre>
<a id="sthref1511" name="sthref1511"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1512" name="sthref1512"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleDecimal</code> value of the column.</p>
<a id="sthref1513" name="sthref1513"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1514" name="sthref1514"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005872" name="i1005872"></a>
<h3 class="refsect3">GetOracleIntervalDS</h3>
<p>This method returns an <code>OracleIntervalDS</code> structure of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column.</p>
<a id="sthref1515" name="sthref1515"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleIntervalDS GetOracleIntervalDS(int <span class="italic">index</span>);
</pre>
<a id="sthref1516" name="sthref1516"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1517" name="sthref1517"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleIntervalDS</code> value of the column.</p>
<a id="sthref1518" name="sthref1518"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1519" name="sthref1519"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005907" name="i1005907"></a>
<h3 class="refsect3">GetOracleIntervalYM</h3>
<p>This method returns an <code>OracleIntervalYM</code> structure of the specified <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code> column.</p>
<a id="sthref1520" name="sthref1520"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleIntervalYM GetOracleIntervalYM(int <span class="italic">index</span>);
</pre>
<a id="sthref1521" name="sthref1521"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1522" name="sthref1522"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleIntervalYM</code> value of the column.</p>
<a id="sthref1523" name="sthref1523"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1524" name="sthref1524"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="BABFEHBI" name="BABFEHBI"></a>
<h3 class="refsect3">GetOracleRef</h3>
<p>This method returns an <code>OracleRef</code> object of the specified <code>REF</code> column.</p>
<a id="sthref1525" name="sthref1525"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleRef GetOracleRef(int <span class="italic">index</span>);
</pre>
<a id="sthref1526" name="sthref1526"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1527" name="sthref1527"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleRef</code> object of the specified column.</p>
<a id="sthref1528" name="sthref1528"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, the <code>Read</code> method has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005942" name="i1005942"></a>
<h3 class="refsect3">GetOracleString</h3>
<p>This method returns an <code>OracleString</code> structure of the specified column.</p>
<a id="sthref1529" name="sthref1529"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleString GetOracleString(int <span class="italic">index</span>);
</pre>
<a id="sthref1530" name="sthref1530"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1531" name="sthref1531"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleString</code> value of the column.</p>
<a id="sthref1532" name="sthref1532"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1533" name="sthref1533"></a>
<p class="subhead2">Remarks</p>
<p>If the column is an Oracle <code>REF</code> column, the string returned is a hexadecimal value that represents the <code>REF</code> in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1005989" name="i1005989"></a>
<h3 class="refsect3">GetOracleTimeStamp</h3>
<p>This method returns an <code>OracleTimeStamp</code> structure of the Oracle <code>TimeStamp</code> column.</p>
<a id="sthref1534" name="sthref1534"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleTimeStamp GetOracleTimeStamp(int <span class="italic">index</span>);
</pre>
<a id="sthref1535" name="sthref1535"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1536" name="sthref1536"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleTimeStamp</code> value of the column.</p>
<a id="sthref1537" name="sthref1537"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1538" name="sthref1538"></a>
<p class="subhead2">Remarks</p>
<p><code>GetOracleTimeStamp</code> is used with the Oracle Type <code>TimeStamp</code>.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006025" name="i1006025"></a>
<h3 class="refsect3">GetOracleTimeStampLTZ</h3>
<p>This method returns an <code>OracleTimeStampLTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code> column.</p>
<a id="sthref1539" name="sthref1539"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleTimeStampLTZ GetOracleTimeStampLTZ(int <span class="italic">index</span>);
</pre>
<a id="sthref1540" name="sthref1540"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1541" name="sthref1541"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleTimeStampLTZ</code> value of the column.</p>
<a id="sthref1542" name="sthref1542"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1543" name="sthref1543"></a>
<p class="subhead2">Remarks</p>
<p><code>GetOracleTimeStampLTZ</code> is used with the Oracle Type <code>TimeStamp</code> with Local Time Zone columns.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006061" name="i1006061"></a>
<h3 class="refsect3">GetOracleTimeStampTZ</h3>
<p>This method returns an <code>OracleTimeStampTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code> column.</p>
<a id="sthref1544" name="sthref1544"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleTimeStampTZ GetOracleTimeStampTZ(int <span class="italic">index</span>);
</pre>
<a id="sthref1545" name="sthref1545"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1546" name="sthref1546"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleTimeStampTZ</code> value of the column.</p>
<a id="sthref1547" name="sthref1547"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1548" name="sthref1548"></a>
<p class="subhead2">Remarks</p>
<p>Used with the Oracle Type <code>TimeStamp</code> with Local Time Zone columns</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1021203" name="i1021203"></a>
<h3 class="refsect3">GetOracleXmlType</h3>
<p>This method returns an <code>OracleXmlType</code> object of the specified <code>XMLType</code> column.</p>
<a id="sthref1549" name="sthref1549"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public OracleXmlType GetOracleXmlType(int <span class="italic">index</span>);
</pre>
<a id="sthref1550" name="sthref1550"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1551" name="sthref1551"></a>
<p class="subhead2">Return Value</p>
<p>The <code>OracleXmlType</code> value of the column.</p>
<a id="sthref1552" name="sthref1552"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1553" name="sthref1553"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<a id="sthref1554" name="sthref1554"></a>
<p class="subhead2">Requirements</p>
<p>This property can only be used with Oracle9<span class="italic">i</span> Release 2 (9.2) or later.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006136" name="i1006136"></a>
<h3 class="refsect3">GetOracleValue</h3>
<p>This method returns the specified column value as an ODP.NET type.</p>
<a id="sthref1555" name="sthref1555"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public object GetOracleValue(int <span class="italic">index</span>);
</pre>
<a id="sthref1556" name="sthref1556"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1557" name="sthref1557"></a>
<p class="subhead2">Return Value</p>
<p>The value of the column as an ODP.NET type.</p>
<a id="sthref1558" name="sthref1558"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<a id="sthref1559" name="sthref1559"></a>
<p class="subhead2">Remarks</p>
<p>If the column is an Oracle object or Oracle collection column and a custom type mapping exists, then a custom type is returned.</p>
<p>If the column is an Oracle <code>REF</code> column, then an <code>OracleRef</code> is returned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006175" name="i1006175"></a>
<h3 class="refsect3">GetOracleValues</h3>
<p>This method gets all the column values as ODP.NET types.</p>
<a id="sthref1560" name="sthref1560"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public int GetOracleValues(object[] <span class="italic">values</span>);
</pre>
<a id="sthref1561" name="sthref1561"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">values</span></code></p>
<p>An array of objects to hold the ODP.NET types as the column values.</p>
</li>
</ul>
<a id="sthref1562" name="sthref1562"></a>
<p class="subhead2">Return Value</p>
<p>The number of ODP.NET types in the <code><span class="codeinlineitalic">values</span></code> array.</p>
<a id="sthref1563" name="sthref1563"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<a id="sthref1564" name="sthref1564"></a>
<p class="subhead2">Remarks</p>
<p>This method provides a way to retrieve all column values rather than retrieving each column value individually.</p>
<p>The number of column values retrieved is the minimum of the length of the <code><span class="codeinlineitalic">values</span></code> array and the number of columns in the result set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">"LOB Support"</a></p>
</li>
</ul>
</div>
<a id="i1006226" name="i1006226"></a>
<h3 class="refsect3">GetOrdinal</h3>
<p>This method returns the <code>0</code>-based ordinal (or index) of the specified column name.</p>
<a id="sthref1565" name="sthref1565"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override int GetOrdinal(string <span class="italic">name</span>);
</pre>
<a id="sthref1566" name="sthref1566"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">name</span></code></p>
<p>The specified column name.</p>
</li>
</ul>
<a id="sthref1567" name="sthref1567"></a>
<p class="subhead2">Return Value</p>
<p>The index of the column.</p>
<a id="sthref1568" name="sthref1568"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1569" name="sthref1569"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<a id="sthref1570" name="sthref1570"></a>
<p class="subhead2">Remarks</p>
<p>A case-sensitive search is made to locate the specified column by its name. If this fails, then a case-insensitive search is made.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="BABBIDBH" name="BABBIDBH"></a><a id="CHDGBEAA" name="CHDGBEAA"></a>
<h3 class="refsect3">GetProviderSpecificFieldType</h3>
<p>This method returns the provider-specific type of the specified column.</p>
<a id="sthref1571" name="sthref1571"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#public override Type GetProviderSpecificFieldType(int <span class="italic">index</span>);
</pre>
<a id="sthref1572" name="sthref1572"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>A zero-based column index.</p>
</li>
</ul>
<a id="sthref1573" name="sthref1573"></a>
<p class="subhead2">Return Value</p>
<p>The provider-specific type of the specified column. This is a member of the <code>Oracle.DataAccess.Types</code> namespace.</p>
<a id="sthref1574" name="sthref1574"></a>
<p class="subhead2">Exceptions</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidOperationException</code> - The reader is closed, or the specified column is a UDT but no registered custom type mapping exists for the UDT.</p>
<a id="sthref1575" name="sthref1575"></a>
<p class="subhead2">Remarks</p>
<p><code>GetProviderSpecficFieldType</code> returns a type that corresponds to the value the application obtains after invoking the <code>GetProviderSpecificValue</code> accessor on the <code>OracleDataReader</code>. For example, if the column is a string, this method returns a .NET Type object for an <code>OracleString</code>.</p>
<p>If the attribute is a UDT, this method may return any of the following:</p>
<ul>
<li>
<p>A .NET Type of the custom type, if the column is an Oracle object or Oracle collection column and a custom type mapping exists.</p>
</li>
<li>
<p>A .NET Type of <code>OracleRef</code> if the column is an Oracle <code>REF</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="BABCEBJA" name="BABCEBJA"></a><a id="CHDIIBDH" name="CHDIIBDH"></a>
<h3 class="refsect3">GetProviderSpecificValue</h3>
<p>This method returns an object that represents the underlying provider-specific value of the specified ordinal.</p>
<a id="sthref1576" name="sthref1576"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override object GetProviderSpecificValue (int <span class="italic">index</span>); 
</pre>
<a id="sthref1577" name="sthref1577"></a>
<p class="subhead2">Parameters</p>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>A zero-based column index.</p>
<a id="sthref1578" name="sthref1578"></a>
<p class="subhead2">Return Value</p>
<p>An <code>Object</code> that is a representation of the underlying provider-specific field type.</p>
<a id="sthref1579" name="sthref1579"></a>
<p class="subhead2">Exceptions</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called or all rows have been read.</p>
<a id="sthref1580" name="sthref1580"></a>
<p class="subhead2">Remarks</p>
<p>If the column is an Oracle object or collection column, and a custom type mapping exists, a custom type is returned.</p>
<p>If the column is an Oracle <code>REF</code> column, an <code>OracleRef</code> is returned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="BABIBJHF" name="BABIBJHF"></a><a id="CHDEECDJ" name="CHDEECDJ"></a>
<h3 class="refsect3">GetProviderSpecificValues</h3>
<p>This method returns an array of objects that represent the underlying provider-specific values.</p>
<a id="sthref1581" name="sthref1581"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override int GetProviderSpecificValues(object [ ] <span class="italic">values</span>);
</pre>
<a id="sthref1582" name="sthref1582"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">values</span></code></p>
<p>An array of objects.</p>
</li>
</ul>
<a id="sthref1583" name="sthref1583"></a>
<p class="subhead2">Return Value</p>
<p>The number of <code>Object</code> instances in the array.</p>
<a id="sthref1584" name="sthref1584"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006262" name="i1006262"></a>
<h3 class="refsect3">GetSchemaTable</h3>
<p>This method returns a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code>.</p>
<a id="sthref1585" name="sthref1585"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override DataTable GetSchemaTable();
</pre>
<a id="sthref1586" name="sthref1586"></a>
<p class="subhead2">Return Value</p>
<p>A <code>DataTable</code> that contains the metadata of the result set.</p>
<a id="sthref1587" name="sthref1587"></a>
<p class="subhead2">Implements</p>
<p><code>IDataReader</code></p>
<a id="sthref1588" name="sthref1588"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed or the reader is closed.</p>
<a id="sthref1589" name="sthref1589"></a>
<p class="subhead2">Remarks</p>
<p>The <code>OracleDataReader.GetSchemaTable</code> method returns the <code>SchemaTable</code>.</p>
<a id="i1006277" name="i1006277"></a>
<p><span class="bold">OracleDataReader SchemaTable<a id="sthref1590" name="sthref1590"></a><a id="sthref1591" name="sthref1591"></a></span></p>
<p>The <code>OracleDataReader</code> <code>SchemaTable</code> is a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code>.</p>
<p>The columns of the <code>SchemaTable</code> are in the order shown.</p>
<div class="tblformalwide"><a id="sthref1592" name="sthref1592"></a><a id="sthref1593" name="sthref1593"></a>
<p class="titleintable">Table 5-49 OracleDataReader SchemaTable</p>
<table class="FormalWide" title="OracleDataReader SchemaTable " summary="Rows are data table columns. first column is name, second column is name type, and third column is description" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="25%" />
<col width="24%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t275">Name</th>
<th align="left" valign="bottom" id="r1c2-t275">Name Type</th>
<th align="left" valign="bottom" id="r1c3-t275">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t275" headers="r1c1-t275">
<p><code>ColumnName</code></p>
</td>
<td align="left" headers="r2c1-t275 r1c2-t275">
<p><code>System.String</code></p>
</td>
<td align="left" headers="r2c1-t275 r1c3-t275">
<p>The name of the column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t275" headers="r1c1-t275">
<p><code>ColumnOrdinal</code></p>
</td>
<td align="left" headers="r3c1-t275 r1c2-t275">
<p><code>System.Int32</code></p>
</td>
<td align="left" headers="r3c1-t275 r1c3-t275">
<p>The <code>0</code>-based ordinal of the column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t275" headers="r1c1-t275">
<p><code>ColumnSize</code></p>
</td>
<td align="left" headers="r4c1-t275 r1c2-t275">
<p><code>System.Int64</code></p>
</td>
<td align="left" headers="r4c1-t275 r1c3-t275">
<p>The maximum possible length of a value in the column. <code>ColumnSize</code> value is determined as follows<code>:</code></p>
<ul>
<li>
<p><code>CHAR</code> and <code>VARCHAR2</code> types:</p>
<p>in bytes - if <code>IsByteSemantic</code> boolean value is <code>true</code></p>
<p>in characters - if <code>IsByteSemantic</code> boolean value is <code>false</code></p>
</li>
<li>
<p>All other types:</p>
<p>in bytes</p>
</li>
</ul>
<p>See <a href="#i1006403">"<code>IsByteSemantic</code>"</a> for more information.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t275" headers="r1c1-t275">
<p><code>NumericPrecision</code></p>
</td>
<td align="left" headers="r5c1-t275 r1c2-t275">
<p><code>System.Int16</code></p>
</td>
<td align="left" headers="r5c1-t275 r1c3-t275">
<p>The maximum precision of the column, if the column is a numeric data type.</p>
<p>This column has valid values for Oracle <code>NUMBER</code>, Oracle <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code>, and Oracle <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> columns. For all other columns, the value is <code>null</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t275" headers="r1c1-t275">
<p><code>NumericScale</code></p>
</td>
<td align="left" headers="r6c1-t275 r1c2-t275">
<p><code>System.Int16</code></p>
</td>
<td align="left" headers="r6c1-t275 r1c3-t275">
<p>The scale of the column.</p>
<p>This column has valid values for Oracle <code>NUMBER</code>, Oracle <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code>, and the Oracle <code>TIMESTAMP</code> columns. For all other columns, the value is <code>null</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t275" headers="r1c1-t275">
<p><code>IsUnique</code></p>
</td>
<td align="left" headers="r7c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r7c1-t275 r1c3-t275">
<p>Indicates whether or not the column is unique.</p>
<p><code>true</code> if no two rows in the base table can have the same value in this column, where the base table is the table returned in <code>BaseTableName</code>.</p>
<p><code>IsUnique</code> is guaranteed to be <code>true</code> if one of the following applies:</p>
<ul>
<li>
<p>the column constitutes a key by itself</p>
</li>
<li>
<p>there is a unique constraint or a unique index that applies only to this column and a <code>NOT</code> <code>NULL</code> constraint has been defined on the column</p>
</li>
<li>
<p>the column is an explicitly selected <code>ROWID</code></p>
</li>
</ul>
<p><code>IsUnique</code> is false if the column can contain duplicate values in the base table.</p>
<p>The default is <code>false</code>.</p>
<p>The value of this property is the same for each occurrence of the base table column in the select list.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t275" headers="r1c1-t275">
<p><code>IsKey</code></p>
</td>
<td align="left" headers="r8c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r8c1-t275 r1c3-t275">
<p>Indicates whether or not the column is a key column.</p>
<p><code>true</code> if the column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with <code>IsKey</code> set to <code>true</code> must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns.</p>
<p>This set of columns can be generated from one of the following in descending order of priority:</p>
<ul>
<li>
<p>A base table primary key.</p>
</li>
<li>
<p>Any of the unique constraints or unique indexes with the following condition: A <code>NOT</code> <code>NULL</code> constraint must be defined on the column or on all of the columns, in the case of a composite unique constraint or composite unique index.</p>
</li>
<li>
<p>Any of the composite unique constraints or composite unique indexes with the following condition: A <code>NULL</code> constraint must be defined on at least one, but not all, of the columns.</p>
</li>
</ul>
<p>An explicitly selected <code>ROWID</code>. <code>false</code> if the column is not required to uniquely identify the row. The value of this property is the same for each occurrence of the base table column in the select list.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t275" headers="r1c1-t275">
<p><code>IsRowID</code></p>
</td>
<td align="left" headers="r9c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r9c1-t275 r1c3-t275">
<p><code>true</code> if the column is a <code>ROWID</code>, otherwise <code>false</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t275" headers="r1c1-t275">
<p><code>BaseColumnName</code></p>
</td>
<td align="left" headers="r10c1-t275 r1c2-t275">
<p><code>System.String</code></p>
</td>
<td align="left" headers="r10c1-t275 r1c3-t275">
<p>The name of the column in the database if an alias is used for the column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t275" headers="r1c1-t275">
<p><code>BaseSchemaName</code></p>
</td>
<td align="left" headers="r11c1-t275 r1c2-t275">
<p><code>System.String</code></p>
</td>
<td align="left" headers="r11c1-t275 r1c3-t275">
<p>The name of the schema in the database that contains the column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t275" headers="r1c1-t275">
<p><code>BaseTableName</code></p>
</td>
<td align="left" headers="r12c1-t275 r1c2-t275">
<p><code>System.String</code></p>
</td>
<td align="left" headers="r12c1-t275 r1c3-t275">
<p>The name of the table or view in the database that contains the column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t275" headers="r1c1-t275">
<p><code>DataType</code></p>
</td>
<td align="left" headers="r13c1-t275 r1c2-t275">
<p><code>System.RuntimeType</code></p>
</td>
<td align="left" headers="r13c1-t275 r1c3-t275">
<p>Maps to the common language runtime type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t275" headers="r1c1-t275">
<p><code>ProviderType</code></p>
</td>
<td align="left" headers="r14c1-t275 r1c2-t275">
<p><code>Oracle.DataAccess. Client.OracleDbType</code></p>
</td>
<td align="left" headers="r14c1-t275 r1c3-t275">
<p>The database column type (<code>OracleDbType</code>) of the column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r15c1-t275" headers="r1c1-t275">
<p><code>AllowDBNull</code></p>
</td>
<td align="left" headers="r15c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r15c1-t275 r1c3-t275">
<p><code>true</code> if <code>null</code> values are allowed, otherwise <code>false</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r16c1-t275" headers="r1c1-t275">
<p><code>IsAliased</code></p>
</td>
<td align="left" headers="r16c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r16c1-t275 r1c3-t275">
<p><code>true</code> if the column is an alias; otherwise <code>false</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r17c1-t275" headers="r1c1-t275"><a id="i1006403" name="i1006403"></a>
<p><code>IsByteSemantic</code></p>
</td>
<td align="left" headers="r17c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r17c1-t275 r1c3-t275">
<p><code>IsByteSemantic</code> is:</p>
<ul>
<li>
<p><code>true</code> if the <code>ColumnSize</code> value uses bytes semantics</p>
</li>
<li>
<p><code>false</code> if <code>ColumnSize</code> uses character semantics</p>
</li>
</ul>
<p>This value is always <code>true</code> when connected to a database version earlier than Oracle9<span class="italic">i</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r18c1-t275" headers="r1c1-t275">
<p><code>IsExpression</code></p>
</td>
<td align="left" headers="r18c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r18c1-t275 r1c3-t275">
<p><code>true</code> if the column is an expression; otherwise <code>false</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r19c1-t275" headers="r1c1-t275">
<p><code>IsHidden</code></p>
</td>
<td align="left" headers="r19c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r19c1-t275 r1c3-t275">
<p><code>true</code> if the column is hidden; otherwise <code>false</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r20c1-t275" headers="r1c1-t275">
<p><code>IsReadOnly</code></p>
</td>
<td align="left" headers="r20c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r20c1-t275 r1c3-t275">
<p><code>true</code> if the column is read-only; otherwise <code>false</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r21c1-t275" headers="r1c1-t275">
<p><code>IsLong</code></p>
</td>
<td align="left" headers="r21c1-t275 r1c2-t275">
<p><code>System.Boolean</code></p>
</td>
<td align="left" headers="r21c1-t275 r1c3-t275">
<p><code>true</code> if the column is a <code>LONG</code>, <code>LONG</code> <code>RAW</code>, <code>BLOB</code>, <code>CLOB</code>, or <code>BFILE</code>; otherwise <code>false</code>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r22c1-t275" headers="r1c1-t275">
<p><code>UdtTypeName</code></p>
</td>
<td align="left" headers="r22c1-t275 r1c2-t275">
<p><code>System.String</code></p>
</td>
<td align="left" headers="r22c1-t275 r1c3-t275">
<p>The type name of the UDT.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<a id="sthref1594" name="sthref1594"></a>
<p class="subhead2">Example</p>
<p>This example creates and uses the <code>SchemaTable</code> from the reader.</p>
<pre xml:space="preserve" class="oac_no_warn">/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,'KING','SOFTWARE ENGR', '5657');
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,'SCOTT','MANAGER', '5960');
commit;
 
*/
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
using Oracle.DataAccess.Types;
 
class GetSchemaTableSample
{
  static void Main()
  {
    string constr = "User Id=scott;Password=tiger;Data Source=oracle";
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    string cmdstr = "SELECT EMPNO,EMPNAME FROM EMPINFO where EMPNO = 1";
    OracleCommand cmd = new OracleCommand(cmdstr, con);
 
    //get the reader
    OracleDataReader reader = cmd.ExecuteReader();
 
    //get the schema table
    DataTable schemaTable = reader.GetSchemaTable();
 
    //retrieve the first column info.
    DataRow row = schemaTable.Rows[0];
 
    //print out the column info
    Console.WriteLine("Column name: " + row["COLUMNNAME"]);
    Console.WriteLine("Precision: " + row["NUMERICPRECISION"]);
    Console.WriteLine("Scale: " + row["NUMERICSCALE"]);
    reader.Close();
 
    // Close the connection
    con.Close();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006481" name="i1006481"></a>
<h3 class="refsect3">GetString</h3>
<p>This method returns the <code>string</code> value of the specified column.</p>
<a id="sthref1595" name="sthref1595"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override string GetString(int <span class="italic">index</span>);
</pre>
<a id="sthref1596" name="sthref1596"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1597" name="sthref1597"></a>
<p class="subhead2">Return Value</p>
<p>The <code>string</code> value of the column.</p>
<a id="sthref1598" name="sthref1598"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1599" name="sthref1599"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1600" name="sthref1600"></a>
<p class="subhead2">Remarks</p>
<p>Call the <code>IsDBNull</code> method to check for null values before calling this method.</p>
<p>If the column is an Oracle <code>REF</code> column, the string returned is a hexadecimal string that represents the <code>REF</code> in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006518" name="i1006518"></a>
<h3 class="refsect3">GetTimeSpan</h3>
<p>This method returns the <code>TimeSpan</code> value of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column.</p>
<a id="sthref1601" name="sthref1601"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public TimeSpan GetTimeSpan(int <span class="italic">index</span>);
</pre>
<a id="sthref1602" name="sthref1602"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1603" name="sthref1603"></a>
<p class="subhead2">Return Value</p>
<p>The <code>TimeSpan</code> value of the column.</p>
<a id="sthref1604" name="sthref1604"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1605" name="sthref1605"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1606" name="sthref1606"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="CHDGCABB" name="CHDGCABB"></a><a id="i1006555" name="i1006555"></a>
<h3 class="refsect3">GetValue</h3>
<p>This method returns the column value as a .NET type.</p>
<a id="sthref1607" name="sthref1607"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override object GetValue(int <span class="italic">index</span>);
</pre>
<a id="sthref1608" name="sthref1608"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1609" name="sthref1609"></a>
<p class="subhead2">Return Value</p>
<p>The value of the column as a .NET type.</p>
<a id="sthref1610" name="sthref1610"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1611" name="sthref1611"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, all rows have been read, or no valid custom type mapping has been specified for the Oracle Object or Oracle Collection column.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<a id="sthref1612" name="sthref1612"></a>
<p class="subhead2">Remarks</p>
<p>If the column is an Oracle Object or an Oracle Collection column, the .NET custom type corresponding to the custom type mapping is returned.</p>
<p>If the column is an Oracle <code>REF</code> column, a hexidecimal value is returned as a .NET string that represents the <code>REF</code> in the database.</p>
<p>If the UDT is <code>NULL</code>, <code>DBNull.Value</code> is returned</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006589" name="i1006589"></a>
<h3 class="refsect3">GetValues</h3>
<p>This method gets all the column values as .NET types.</p>
<a id="sthref1613" name="sthref1613"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override int GetValues(object[ ] <span class="italic">values</span>);
</pre>
<a id="sthref1614" name="sthref1614"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">values</span></code></p>
<p>An array of objects to hold the .NET types as the column values.</p>
</li>
</ul>
<a id="sthref1615" name="sthref1615"></a>
<p class="subhead2">Return Value</p>
<p>The number of objects in the <code><span class="codeinlineitalic">values</span></code> array.</p>
<a id="sthref1616" name="sthref1616"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1617" name="sthref1617"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<a id="sthref1618" name="sthref1618"></a>
<p class="subhead2">Remarks</p>
<p>This method provides a way to retrieve all column values rather than retrieving each column value individually.</p>
<p>The number of column values retrieved is the minimum of the length of the values array and the number of columns in the result set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006627" name="i1006627"></a>
<h3 class="refsect3">GetXmlReader</h3>
<p>This method returns the contents of an <code>XMLType</code> column as an instance of an .NET <code>XmlTextReader</code> object.</p>
<a id="sthref1619" name="sthref1619"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// C#
public XmlReader GetXmlReader(int <span class="italic">index</span>);
</pre>
<a id="sthref1620" name="sthref1620"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1621" name="sthref1621"></a>
<p class="subhead2">Return Value</p>
<p>A .NET <code>XmlTextReader</code>.</p>
<a id="sthref1622" name="sthref1622"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<a id="sthref1623" name="sthref1623"></a>
<p class="subhead2">Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006661" name="i1006661"></a>
<h3 class="refsect3">IsDBNull</h3>
<p>This method indicates whether or not the column value is <code>NULL</code>.</p>
<a id="sthref1624" name="sthref1624"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override bool IsDBNull(int <span class="italic">index</span>);
</pre>
<a id="sthref1625" name="sthref1625"></a>
<p class="subhead2">Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<a id="sthref1626" name="sthref1626"></a>
<p class="subhead2">Return Value</p>
<p>Returns <code>true</code> if the column is a <code>NULL</code> value; otherwise, returns <code>false</code>.</p>
<a id="sthref1627" name="sthref1627"></a>
<p class="subhead2">Implements</p>
<p><code>IDataRecord</code></p>
<a id="sthref1628" name="sthref1628"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<a id="sthref1629" name="sthref1629"></a>
<p class="subhead2">Remarks</p>
<p>This method should be called to check for <code>NULL</code> values before calling the other accessor methods.</p>
<a id="sthref1630" name="sthref1630"></a>
<p class="subhead2">Example</p>
<p>The code example for the <code>OracleDataReader</code> class includes the <code>IsDBNull</code> method. See <a href="#i1003289">"Example"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006705" name="i1006705"></a>
<h3 class="refsect3">NextResult</h3>
<p>This method advances the data reader to the next result set.</p>
<a id="sthref1631" name="sthref1631"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override bool NextResult();
</pre>
<a id="sthref1632" name="sthref1632"></a>
<p class="subhead2">Return Value</p>
<p>Returns <code>true</code> if another result set exists; otherwise, returns <code>false</code>.</p>
<a id="sthref1633" name="sthref1633"></a>
<p class="subhead2">Implements</p>
<p><code>IDataReader</code></p>
<a id="sthref1634" name="sthref1634"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed or the reader is closed.</p>
<a id="sthref1635" name="sthref1635"></a>
<p class="subhead2">Remarks</p>
<p><code>NextResult</code> is used when reading results from stored procedure execution that return more than one result set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<a id="i1006737" name="i1006737"></a>
<h3 class="refsect3">Read</h3>
<p>This method reads the next row in the result set.</p>
<a id="sthref1636" name="sthref1636"></a>
<p class="subhead2">Declaration</p>
<pre xml:space="preserve" class="oac_no_warn">// ADO.NET 2.0: C#
public override  bool Read();
</pre>
<a id="sthref1637" name="sthref1637"></a>
<p class="subhead2">Return Value</p>
<p>Returns <code>true</code> if another row exists; otherwise, returns <code>false</code>.</p>
<a id="sthref1638" name="sthref1638"></a>
<p class="subhead2">Implements</p>
<p><code>IDataReader</code></p>
<a id="sthref1639" name="sthref1639"></a>
<p class="subhead2">Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed or the reader is closed.</p>
<a id="sthref1640" name="sthref1640"></a>
<p class="subhead2">Remarks</p>
<p>The initial position of the data reader is before the first row. Therefore, the <code>Read</code> method must be called to fetch the first row. The row that was just read is considered the <span class="italic">current row</span>. If the <code>OracleDataReader</code> has no more rows to read, it returns <code>false</code>.</p>
<a id="sthref1641" name="sthref1641"></a>
<p class="subhead2">Example</p>
<p>The code example for the <code>OracleDataReader</code> class includes the <code>Read</code> method. See <a href="#i1003289">"Example"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">"Oracle.DataAccess.Client Namespace"</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<div class="footer">
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<col width="33%" />
<col width="*" />
<col width="33%" />
<tr>
<td align="left">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="OracleDatabaseClass.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="OracleErrorClass.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td style="font-size: 90%" align="center" class="copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
